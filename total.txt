Coverage Report by instance with details

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field1
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                         23        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                         23     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        262        always @(posedge clk) begin
    69              1                        262           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        152     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        152     
    79       1 (GI=2)                        152     
    79       1 (GI=3)                        152     
    79       1 (GI=4)                        152     
    79       1 (GI=5)                        152     
    79       1 (GI=6)                        156     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                         79     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        112     
    83       1 (GI=3)                        144     
    83       1 (GI=4)                        168     
    83       1 (GI=5)                        195     
    83       1 (GI=6)                        225     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        231        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        231             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214       150        64    70.09%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           3           3      100.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-6]           4           4      100.00 
                                out_data_bus[0-31]           3           3      100.00 

Total Node Count     =        107 
Toggled Node Count   =         75 
Untoggled Node Count =         32 

Toggle Coverage      =      70.09% (150 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field2
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                          4        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                          4     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        262        always @(posedge clk) begin
    69              1                        262           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        133     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        133     
    79       1 (GI=2)                        133     
    79       1 (GI=3)                        133     
    79       1 (GI=4)                        133     
    79       1 (GI=5)                        133     
    79       1 (GI=6)                        137     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                         74     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        100     
    83       1 (GI=3)                        125     
    83       1 (GI=4)                        134     
    83       1 (GI=5)                        150     
    83       1 (GI=6)                        163     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        155        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        155             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214        22       192    10.28%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_1/gen_multicycle_captured_pd_field2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           0           0        0.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-6]           4           4      100.00 
                                out_data_bus[0-31]           0           0        0.00 

Total Node Count     =        107 
Toggled Node Count   =         11 
Untoggled Node Count =         96 

Toggle Coverage      =      10.28% (22 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_1
=== Design Unit: work.control_pd_debug_with_capture_v3
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16        14         2    87.50%

================================Branch Details================================

Branch Coverage for instance /TOP/pd_debug_u/pd_debug_1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
------------------------------------IF Branch------------------------------------
    81                                        98     Count coming in to IF
    81              1                         34        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82              1                         64                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                        63     Count coming in to IF
    82              2                         21                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    82              3                         42                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                        61     Count coming in to IF
    84              1                         31        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85              1                         30                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                        29     Count coming in to IF
    85              2                    ***0***                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    85              3                         29                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                        36     Count coming in to IF
    94              1                          6           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         30           else       pd_capture_q_field1 <= pd_capture_field1;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                      178     Count coming in to IF
    100             1                         37           if (pd_capture_event_field1) begin
                                             141     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    138                                       16     Count coming in to IF
    138             1                          6           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                         10           else       pd_capture_q_field2 <= pd_capture_field2;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    144                                      159     Count coming in to IF
    144             1                    ***0***           if (pd_capture_event_field2) begin
                                             159     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                     31        20        11    64.51%

================================Expression Details================================

Expression Coverage for instance /TOP/pd_debug_u/pd_debug_1 --

  File control_pd_debug_with_capture_v3.sv
----------------Focused Expression View-----------------
Line       64 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray)))
Expression totals: 2 of 2 input terms covered = 100.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         Y
  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))         Y

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:          1  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:          1  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       65 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray)))
Expression totals: 0 of 2 input terms covered = 0.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         N  '_1' not hit             Hit '_1'
  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:    ***0***  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:    ***0***  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       67 Item    1  ((e_valid && capture_match_field1) && cif2dbg_c_debug_pd_en)
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
   capture_match_field1         Y
  cif2dbg_c_debug_pd_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:          1  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field1)
  Row   3:          4  capture_match_field1_0   e_valid                       
  Row   4:          1  capture_match_field1_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field1)
  Row   6:          1  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field1)

----------------Focused Expression View-----------------
Line       68 Item    1  ((e_valid && capture_match_field2) && cif2dbg_c_debug_pd_en)
Expression totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         N  '_1' not hit             Hit '_1'
   capture_match_field2         N  '_1' not hit             Hit '_1'
  cif2dbg_c_debug_pd_en         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:    ***0***  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field2)
  Row   3:          4  capture_match_field2_0   e_valid                       
  Row   4:    ***0***  capture_match_field2_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field2)
  Row   6:    ***0***  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field2)

----------------Focused Expression View-----------------
Line       70 Item    1  (e_valid & cif2dbg_c_debug_pd_en)
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
  cif2dbg_c_debug_pd_en         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                cif2dbg_c_debug_pd_en         
  Row   2:          4  e_valid_1                cif2dbg_c_debug_pd_en         
  Row   3:          3  cif2dbg_c_debug_pd_en_0  e_valid                       
  Row   4:          4  cif2dbg_c_debug_pd_en_1  e_valid                       

----------------Focused Expression View-----------------
Line       75 Item    1  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && (~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en))
Expression totals: 7 of 7 input terms covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
        cif2dbg_c_debug_pd_capture_en         Y
    dbg2cif_e_debug_pd_field1_cnt_inc         Y
                      capture_trigger         Y
                              e_valid         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                  pd_capture_q_field1         Y
   cif2dbg_c_debug_pd_capture_last_en         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0        -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1        ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
  Row   3:          4  dbg2cif_e_debug_pd_field1_cnt_inc_0    (cif2dbg_c_debug_pd_capture_en && ~((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))
  Row   4:          1  dbg2cif_e_debug_pd_field1_cnt_inc_1    ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en)
  Row   5:          4  capture_trigger_0                      (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc)
  Row   6:          4  capture_trigger_1                      ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   7:          3  e_valid_0                              (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && capture_trigger)
  Row   8:          4  e_valid_1                              ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   9:          4  cif2dbg_c_debug_pd_en_trigger_match_0  (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   10:          4  cif2dbg_c_debug_pd_en_trigger_match_1  ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   11:          4  pd_capture_q_field1_0                  (cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
 Row   12:          1  pd_capture_q_field1_1                  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && ~cif2dbg_c_debug_pd_capture_last_en)
 Row   13:          1  cif2dbg_c_debug_pd_capture_last_en_0   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)
 Row   14:          3  cif2dbg_c_debug_pd_capture_last_en_1   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)

----------------Focused Expression View-----------------
Line       78 Item    1  (cif2dbg_c_debug_pd_capture_en && dbg2cif_e_debug_pd_field2_cnt_inc)
Expression totals: 0 of 2 input terms covered = 0.00%

                         Input Term   Covered  Reason for no coverage   Hint
                        -----------  --------  -----------------------  --------------
      cif2dbg_c_debug_pd_capture_en         N  '_1' not hit             Hit '_1'
  dbg2cif_e_debug_pd_field2_cnt_inc         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                           Non-masking condition(s)      
 ---------  ---------  --------------------                 -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0      -                             
  Row   2:    ***0***  cif2dbg_c_debug_pd_capture_en_1      dbg2cif_e_debug_pd_field2_cnt_inc
  Row   3:          4  dbg2cif_e_debug_pd_field2_cnt_inc_0  cif2dbg_c_debug_pd_capture_en 
  Row   4:    ***0***  dbg2cif_e_debug_pd_field2_cnt_inc_1  cif2dbg_c_debug_pd_capture_en 

----------------Focused Expression View-----------------
Line       81 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field1? 1'b1: pd_capture_q_field1))
Expression totals: 3 of 3 input terms covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         Y
        pd_capture_event_field1         Y
            pd_capture_q_field1         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field1? 1'b1: pd_capture_q_field1)
  Row   3:          4  pd_capture_event_field1_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field1)
  Row   4:          4  pd_capture_event_field1_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          4  pd_capture_q_field1_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)
  Row   6:          3  pd_capture_q_field1_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)

----------------Focused Expression View-----------------
Line       84 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field2? 1'b1: pd_capture_q_field2))
Expression totals: 0 of 3 input terms covered = 0.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         N  '_1' not hit             Hit '_1'
        pd_capture_event_field2         N  '_1' not hit             Hit '_1'
            pd_capture_q_field2         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:    ***0***  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field2? 1'b1: pd_capture_q_field2)
  Row   3:          4  pd_capture_event_field2_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field2)
  Row   4:    ***0***  pd_capture_event_field2_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          4  pd_capture_q_field2_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)
  Row   6:    ***0***  pd_capture_q_field2_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)

----------------Focused Expression View-----------------
Line       89 Item    1  (((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match) && cif2dbg_c_debug_pd_en)
Expression totals: 4 of 4 input terms covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
                              e_valid         Y
                      capture_trigger         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                cif2dbg_c_debug_pd_en         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          4  e_valid_0                              -                             
  Row   2:          4  e_valid_1                              (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   3:          4  capture_trigger_0                      e_valid                       
  Row   4:          4  capture_trigger_1                      (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   5:          4  cif2dbg_c_debug_pd_en_trigger_match_0  (e_valid && capture_trigger)  
  Row   6:          4  cif2dbg_c_debug_pd_en_trigger_match_1  (cif2dbg_c_debug_pd_en && (e_valid && capture_trigger))
  Row   7:          3  cif2dbg_c_debug_pd_en_0                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)
  Row   8:          4  cif2dbg_c_debug_pd_en_1                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        26         1    96.29%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
    1                                                module control_pd_debug_with_capture_v3 #(
    2                                                
    3                                                  parameter PD_WIDTH = 100, // Width of incoming PD
    4                                                  parameter PACKET_SIZE_OFFSET = 0, // Offset of the byte count field in the PD
    5                                                  parameter PACKET_SIZE_WIDTH = 12, // Width of the byte count field in the PD
    6                                                  parameter PD_MUX_SEL_WIDTH = $clog2(PD_WIDTH/32+ (PD_WIDTH % 32 == 0 ? 0 : 1)), // Width of the index for 32b words in the PD
    7                                                  parameter DISABLE_LACG = 0 // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    8                                                
    9                                                  )(
    10                                                 input 			                  clk,
    11                                                 input 			                  CFG_anchor_clk_override,
    12                                                 input 			                  rstn,
    13                                                 input 			                  e_valid, // Input PD valid
    14                                                 input [PD_WIDTH-1:0] 		      eq_pd, // Input PD data
    15                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray, // Matching masks and values
    16                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray,
    17                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray,
    18                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray,
    19                                                 input [3:0] 			            cif2dbg_c_debug_pd_en_reg, // Configurations
    20                                                 input 			                  capture_trigger, // Designer can use this bit to perform arbitrary captures to field1
    21                                                 input [PD_MUX_SEL_WIDTH:0] 	cif2dbg_c_debug_pd_captured_word_sel, // Word select for dbg2cif_c_debug_pd_out
    22                                                 output logic 			         dbg2cif_e_debug_pd_field1_cnt_inc, // Match on field1
    23                                                 output logic 			         dbg2cif_e_debug_pd_field2_cnt_inc, // Match on field2
    24                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_cnt_inc, // capture_trigger found
    25                                                 output logic 			         dbg2cif_e_debug_pd_total_pd_cnt_inc, // Total PDs
    26                                                 output logic 			         dbg2cif_e_debug_pd_field1_byte_cnt_inc, // Field1 byte counter
    27                                                 output logic 			         dbg2cif_e_debug_pd_field2_byte_cnt_inc, // Field2 byte counter
    28                                                 output logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    29                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field1, // Pulse indicating PD has been captured for field1
    30                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field2, // Pulse indicating PD has been captured for field2
    31                                                 output logic 			         capture_match_o, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    32                                                 output logic [32-1:0] 	      dbg2cif_c_debug_pd_out // Captured PD field
    33                                               );
    34                                                  
    35                                                  // LACG_MIN_WIDTH should be defined in a project common_defines.v file.
    36                                                  localparam USE_LACG = 0;
    37                                                  
    38                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field1; // pd captured by capture match on field1 or capture_trigger
    39                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field2; // pd captured by capture match on field2
    40                                                  logic                       pd_capture_event_field1;
    41                                                  logic                       pd_capture_event_field2;
    42                                                  logic                       pd_capture_field1;
    43                                                  logic                       pd_capture_field2;
    44                                                  logic 			             pd_capture_q_field1;
    45                                                  logic 			             pd_capture_q_field2;
    46                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field1;
    47                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field2;
    48                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field1_nxt;
    49                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field2_nxt;
    50                                                  
    51                                                  logic                       capture_match_field1;
    52                                                  logic                       capture_match_field2;
    53                                                  
    54                                                  logic                       cif2dbg_c_debug_pd_en_trigger_match; // enables capture trigger input and capture match output
    55                                                  logic 		      	       cif2dbg_c_debug_pd_capture_last_en; // capture regardless of whether a PD has already been captured - effectively capture last PD
    56                                                  logic                       cif2dbg_c_debug_pd_capture_en; // capture on valid
    57                                                  logic                       cif2dbg_c_debug_pd_en; // enable match counters and capture
    58                                                  
    59                                                  assign cif2dbg_c_debug_pd_en = cif2dbg_c_debug_pd_en_reg[0];
    60                                                  assign cif2dbg_c_debug_pd_capture_en = cif2dbg_c_debug_pd_en_reg[1];
    61                                                  assign cif2dbg_c_debug_pd_en_trigger_match = cif2dbg_c_debug_pd_en_reg[2]; 
    62                                                  assign cif2dbg_c_debug_pd_capture_last_en = cif2dbg_c_debug_pd_en_reg[3]; 
    63                                                  
    64              1                        314        assign capture_match_field1 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray));
    65              1                        314        assign capture_match_field2 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray));
    66                                                  
    67              1                         89        assign dbg2cif_e_debug_pd_field1_cnt_inc = e_valid && capture_match_field1 && cif2dbg_c_debug_pd_en;
    68              1                         83        assign dbg2cif_e_debug_pd_field2_cnt_inc = e_valid && capture_match_field2 && cif2dbg_c_debug_pd_en;
    69                                                  
    70              1                         81        assign dbg2cif_e_debug_pd_total_pd_cnt_inc = e_valid & cif2dbg_c_debug_pd_en;
    71                                                  assign dbg2cif_e_debug_pd_field1_byte_cnt_inc = dbg2cif_e_debug_pd_field1_cnt_inc;
    72                                                  assign dbg2cif_e_debug_pd_field2_byte_cnt_inc = dbg2cif_e_debug_pd_field2_cnt_inc;
    73              1                        159        assign dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount = eq_pd[PACKET_SIZE_OFFSET +: PACKET_SIZE_WIDTH];
    74                                                  
    75              1                        190        assign pd_capture_event_field1 = cif2dbg_c_debug_pd_capture_en && 
    76                                               				    (dbg2cif_e_debug_pd_field1_cnt_inc || (capture_trigger && e_valid && cif2dbg_c_debug_pd_en_trigger_match)) && 
    77                                               				    (!pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en);
    78              1                         61        assign pd_capture_event_field2 = cif2dbg_c_debug_pd_capture_en && 
    79                                               				    dbg2cif_e_debug_pd_field2_cnt_inc ;
    80                                                  
    81              1                        102        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82                                                                             pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    83                                               
    84              1                         65        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85                                                                             pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    86                                               
    87                                                  assign dbg2cif_e_debug_pd_capture_match_field1 = pd_capture_event_field1;
    88                                                  assign dbg2cif_e_debug_pd_capture_match_field2 = pd_capture_event_field2;
    89              1                        164        assign dbg2cif_e_debug_pd_capture_match_cnt_inc = e_valid && capture_trigger && cif2dbg_c_debug_pd_en_trigger_match && cif2dbg_c_debug_pd_en;
    90                                               
    91                                                  assign capture_match_o = pd_capture_event_field1;
    92                                               
    93              1                         36        always_ff @(posedge clk) begin
    94              1                          6           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         30           else       pd_capture_q_field1 <= pd_capture_field1;
    96                                                  end
    97                                               
    98              1                        178        always_comb begin
    99              1                        178           dbg2cif_c_debug_pd_in_field1_nxt = dbg2cif_c_debug_pd_in_field1;
    100                                                    if (pd_capture_event_field1) begin
    101             1                         37     	 dbg2cif_c_debug_pd_in_field1_nxt = eq_pd;
    102                                                    end
    103                                                 end
    104                                                 
    105                                                 generate
    106                                                    if (USE_LACG) begin
    107                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    108                                              	 ip_lacg_field1
    109                                              	   (.TEST__ENABLE(1'b0), 
    110                                              	    .data_in (dbg2cif_c_debug_pd_in_field1_nxt), 
    111                                              	    .anchor_clk_en (pd_capture_event_field1), 
    112                                              	    .data_out (dbg2cif_c_debug_pd_in_field1), .*);
    113                                                    end
    114                                                    else begin
    115             1                         42     	 always_ff @ (posedge clk) begin    
    116             1                         42     	    dbg2cif_c_debug_pd_in_field1 <= dbg2cif_c_debug_pd_in_field1_nxt;
    117                                              	 end
    118                                                    end
    119                                                 endgenerate
    120                                              
    121                                                 gen_multicycle_debug_data_mux 
    122                                                   #(/*AUTOINSTPARAM*/
    123                                                     // Parameters
    124                                                     .IN_DATA_BUS_WIDTH    (PD_WIDTH), // Templated
    125                                                     .NUM_OF_IN_DATA_BUSES (1), // Templated
    126                                                     .OUT_DATA_BUS_WIDTH   (32)) // Templated
    127                                                 gen_multicycle_captured_pd_field1 
    128                                                   (/*AUTOINST*/
    129                                                    // Outputs
    130                                                    .out_data_bus (dbg2cif_c_debug_pd_out_field1), // Templated
    131                                                    // Inputs
    132                                                    .clk          (clk),      // Templated
    133                                                    .in_data_bus  (dbg2cif_c_debug_pd_in_field1), // Templated
    134                                                    .in_data_sel  (cif2dbg_c_debug_pd_captured_word_sel[PD_MUX_SEL_WIDTH:1])
    135                                                    );
    136                                              
    137             1                         16        always_ff @(posedge clk) begin
    138             1                          6           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                         10           else       pd_capture_q_field2 <= pd_capture_field2;
    140                                                 end
    141                                              
    142             1                        159        always_comb begin
    143             1                        159           dbg2cif_c_debug_pd_in_field2_nxt = dbg2cif_c_debug_pd_in_field2;
    144                                                    if (pd_capture_event_field2) begin
    145             1                    ***0***     	 dbg2cif_c_debug_pd_in_field2_nxt = eq_pd;
    146                                                    end
    147                                                 end
    148                                                 
    149                                                 generate
    150                                                    if (USE_LACG) begin
    151                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    152                                              	 ip_lacg_field2
    153                                              	   (.TEST__ENABLE(1'b0), 
    154                                              	    .data_in (dbg2cif_c_debug_pd_in_field2_nxt), 
    155                                              	    .anchor_clk_en (pd_capture_event_field2), 
    156                                              	    .data_out (dbg2cif_c_debug_pd_in_field2), .*);
    157                                                    end
    158                                                    else begin
    159             1                          4     	 always_ff @ (posedge clk) begin    
    160             1                          4     	    dbg2cif_c_debug_pd_in_field2 <= dbg2cif_c_debug_pd_in_field2_nxt;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        458       205       253    44.75%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                           CFG_anchor_clk_override           0           0        0.00 
                              capture_match_field1           1           1      100.00 
                              capture_match_field2           0           0        0.00 
                                   capture_match_o           3           3      100.00 
                                   capture_trigger           4           4      100.00 
                     cif2dbg_c_debug_pd_capture_en           3           4      100.00 
                cif2dbg_c_debug_pd_capture_last_en           3           3      100.00 
         cif2dbg_c_debug_pd_captured_word_sel[0-3]           4           4      100.00 
                             cif2dbg_c_debug_pd_en           3           3      100.00 
                      cif2dbg_c_debug_pd_en_reg[0]           3           3      100.00 
                      cif2dbg_c_debug_pd_en_reg[1]           3           4      100.00 
                      cif2dbg_c_debug_pd_en_reg[2]           4           4      100.00 
                      cif2dbg_c_debug_pd_en_reg[3]           3           3      100.00 
               cif2dbg_c_debug_pd_en_trigger_match           4           4      100.00 
                                               clk           4           4      100.00 
                      dbg2cif_c_debug_pd_out[0-31]           3           3      100.00 
               dbg2cif_c_debug_pd_out_field1[0-31]           3           3      100.00 
               dbg2cif_c_debug_pd_out_field2[0-31]           0           0        0.00 
          dbg2cif_e_debug_pd_capture_match_cnt_inc           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field1           3           3      100.00 
           dbg2cif_e_debug_pd_capture_match_field2           0           0        0.00 
            dbg2cif_e_debug_pd_field1_byte_cnt_inc           1           1      100.00 
                 dbg2cif_e_debug_pd_field1_cnt_inc           1           1      100.00 
            dbg2cif_e_debug_pd_field2_byte_cnt_inc           0           0        0.00 
                 dbg2cif_e_debug_pd_field2_cnt_inc           0           0        0.00 
               dbg2cif_e_debug_pd_total_pd_cnt_inc           3           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount[0-11] 
                                                             4           4      100.00 
                                           e_valid           3           4      100.00 
                                        eq_pd[113]           4           4      100.00 
                                    eq_pd[114-199]           0           0        0.00 
                           pd_capture_event_field1           3           3      100.00 
                           pd_capture_event_field2           0           0        0.00 
                                 pd_capture_field1           2           3      100.00 
                                 pd_capture_field2           0           0        0.00 
                               pd_capture_q_field1           2           3      100.00 
                               pd_capture_q_field2           0           0        0.00 
                                              rstn           0           3       50.00 

Total Node Count     =        229 
Toggled Node Count   =        102 
Untoggled Node Count =        127 

Toggle Coverage      =      44.75% (205 of 458 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field1
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                         51        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                         51     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        280        always @(posedge clk) begin
    69              1                        280           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        189     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        189     
    79       1 (GI=2)                        189     
    79       1 (GI=3)                        189     
    79       1 (GI=4)                        189     
    79       1 (GI=5)                        189     
    79       1 (GI=6)                        193     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                        100     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        143     
    83       1 (GI=3)                        176     
    83       1 (GI=4)                        207     
    83       1 (GI=5)                        250     
    83       1 (GI=6)                        281     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        300        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        300             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214       150        64    70.09%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           4           4      100.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-3]           4           4      100.00 
                        one_hot_select_vector_r[4]           3           3      100.00 
                      one_hot_select_vector_r[5-6]           4           4      100.00 
                                out_data_bus[0-31]           4           4      100.00 

Total Node Count     =        107 
Toggled Node Count   =         75 
Untoggled Node Count =         32 

Toggle Coverage      =      70.09% (150 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field2
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                          4        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                          4     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        280        always @(posedge clk) begin
    69              1                        280           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        142     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        142     
    79       1 (GI=2)                        142     
    79       1 (GI=3)                        142     
    79       1 (GI=4)                        142     
    79       1 (GI=5)                        142     
    79       1 (GI=6)                        146     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                         85     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        119     
    83       1 (GI=3)                        134     
    83       1 (GI=4)                        140     
    83       1 (GI=5)                        150     
    83       1 (GI=6)                        157     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        145        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        145             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214        22       192    10.28%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_2/gen_multicycle_captured_pd_field2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           0           0        0.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-3]           4           4      100.00 
                        one_hot_select_vector_r[4]           3           3      100.00 
                      one_hot_select_vector_r[5-6]           4           4      100.00 
                                out_data_bus[0-31]           0           0        0.00 

Total Node Count     =        107 
Toggled Node Count   =         11 
Untoggled Node Count =         96 

Toggle Coverage      =      10.28% (22 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_2
=== Design Unit: work.control_pd_debug_with_capture_v3
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16        14         2    87.50%

================================Branch Details================================

Branch Coverage for instance /TOP/pd_debug_u/pd_debug_2

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
------------------------------------IF Branch------------------------------------
    81                                       138     Count coming in to IF
    81              1                         52        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82              1                         86                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                        86     Count coming in to IF
    82              2                         37                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    82              3                         49                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                        61     Count coming in to IF
    84              1                         34        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85              1                         27                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                        27     Count coming in to IF
    85              2                    ***0***                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    85              3                         27                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                        58     Count coming in to IF
    94              1                          7           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         51           else       pd_capture_q_field1 <= pd_capture_field1;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                      234     Count coming in to IF
    100             1                         84           if (pd_capture_event_field1) begin
                                             150     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    138                                       15     Count coming in to IF
    138             1                          6           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                          9           else       pd_capture_q_field2 <= pd_capture_field2;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    144                                      163     Count coming in to IF
    144             1                    ***0***           if (pd_capture_event_field2) begin
                                             163     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                     31        20        11    64.51%

================================Expression Details================================

Expression Coverage for instance /TOP/pd_debug_u/pd_debug_2 --

  File control_pd_debug_with_capture_v3.sv
----------------Focused Expression View-----------------
Line       64 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray)))
Expression totals: 2 of 2 input terms covered = 100.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         Y
  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))         Y

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:          1  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:          1  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       65 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray)))
Expression totals: 0 of 2 input terms covered = 0.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         N  '_1' not hit             Hit '_1'
  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:    ***0***  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:    ***0***  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       67 Item    1  ((e_valid && capture_match_field1) && cif2dbg_c_debug_pd_en)
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
   capture_match_field1         Y
  cif2dbg_c_debug_pd_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:          1  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field1)
  Row   3:          4  capture_match_field1_0   e_valid                       
  Row   4:          1  capture_match_field1_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field1)
  Row   6:          1  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field1)

----------------Focused Expression View-----------------
Line       68 Item    1  ((e_valid && capture_match_field2) && cif2dbg_c_debug_pd_en)
Expression totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         N  '_1' not hit             Hit '_1'
   capture_match_field2         N  '_1' not hit             Hit '_1'
  cif2dbg_c_debug_pd_en         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:    ***0***  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field2)
  Row   3:          4  capture_match_field2_0   e_valid                       
  Row   4:    ***0***  capture_match_field2_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field2)
  Row   6:    ***0***  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field2)

----------------Focused Expression View-----------------
Line       70 Item    1  (e_valid & cif2dbg_c_debug_pd_en)
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
  cif2dbg_c_debug_pd_en         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                cif2dbg_c_debug_pd_en         
  Row   2:          4  e_valid_1                cif2dbg_c_debug_pd_en         
  Row   3:          3  cif2dbg_c_debug_pd_en_0  e_valid                       
  Row   4:          4  cif2dbg_c_debug_pd_en_1  e_valid                       

----------------Focused Expression View-----------------
Line       75 Item    1  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && (~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en))
Expression totals: 7 of 7 input terms covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
        cif2dbg_c_debug_pd_capture_en         Y
    dbg2cif_e_debug_pd_field1_cnt_inc         Y
                      capture_trigger         Y
                              e_valid         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                  pd_capture_q_field1         Y
   cif2dbg_c_debug_pd_capture_last_en         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0        -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1        ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
  Row   3:          4  dbg2cif_e_debug_pd_field1_cnt_inc_0    (cif2dbg_c_debug_pd_capture_en && ~((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))
  Row   4:          1  dbg2cif_e_debug_pd_field1_cnt_inc_1    ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en)
  Row   5:          4  capture_trigger_0                      (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc)
  Row   6:          4  capture_trigger_1                      ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   7:          4  e_valid_0                              (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && capture_trigger)
  Row   8:          4  e_valid_1                              ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   9:          4  cif2dbg_c_debug_pd_en_trigger_match_0  (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   10:          4  cif2dbg_c_debug_pd_en_trigger_match_1  ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   11:          4  pd_capture_q_field1_0                  (cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
 Row   12:          3  pd_capture_q_field1_1                  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && ~cif2dbg_c_debug_pd_capture_last_en)
 Row   13:          3  cif2dbg_c_debug_pd_capture_last_en_0   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)
 Row   14:          4  cif2dbg_c_debug_pd_capture_last_en_1   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)

----------------Focused Expression View-----------------
Line       78 Item    1  (cif2dbg_c_debug_pd_capture_en && dbg2cif_e_debug_pd_field2_cnt_inc)
Expression totals: 0 of 2 input terms covered = 0.00%

                         Input Term   Covered  Reason for no coverage   Hint
                        -----------  --------  -----------------------  --------------
      cif2dbg_c_debug_pd_capture_en         N  '_1' not hit             Hit '_1'
  dbg2cif_e_debug_pd_field2_cnt_inc         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                           Non-masking condition(s)      
 ---------  ---------  --------------------                 -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0      -                             
  Row   2:    ***0***  cif2dbg_c_debug_pd_capture_en_1      dbg2cif_e_debug_pd_field2_cnt_inc
  Row   3:          4  dbg2cif_e_debug_pd_field2_cnt_inc_0  cif2dbg_c_debug_pd_capture_en 
  Row   4:    ***0***  dbg2cif_e_debug_pd_field2_cnt_inc_1  cif2dbg_c_debug_pd_capture_en 

----------------Focused Expression View-----------------
Line       81 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field1? 1'b1: pd_capture_q_field1))
Expression totals: 3 of 3 input terms covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         Y
        pd_capture_event_field1         Y
            pd_capture_q_field1         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field1? 1'b1: pd_capture_q_field1)
  Row   3:          4  pd_capture_event_field1_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field1)
  Row   4:          4  pd_capture_event_field1_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          4  pd_capture_q_field1_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)
  Row   6:          4  pd_capture_q_field1_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)

----------------Focused Expression View-----------------
Line       84 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field2? 1'b1: pd_capture_q_field2))
Expression totals: 0 of 3 input terms covered = 0.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         N  '_1' not hit             Hit '_1'
        pd_capture_event_field2         N  '_1' not hit             Hit '_1'
            pd_capture_q_field2         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          4  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:    ***0***  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field2? 1'b1: pd_capture_q_field2)
  Row   3:          4  pd_capture_event_field2_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field2)
  Row   4:    ***0***  pd_capture_event_field2_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          4  pd_capture_q_field2_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)
  Row   6:    ***0***  pd_capture_q_field2_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)

----------------Focused Expression View-----------------
Line       89 Item    1  (((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match) && cif2dbg_c_debug_pd_en)
Expression totals: 4 of 4 input terms covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
                              e_valid         Y
                      capture_trigger         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                cif2dbg_c_debug_pd_en         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          4  e_valid_0                              -                             
  Row   2:          4  e_valid_1                              (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   3:          4  capture_trigger_0                      e_valid                       
  Row   4:          4  capture_trigger_1                      (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   5:          4  cif2dbg_c_debug_pd_en_trigger_match_0  (e_valid && capture_trigger)  
  Row   6:          4  cif2dbg_c_debug_pd_en_trigger_match_1  (cif2dbg_c_debug_pd_en && (e_valid && capture_trigger))
  Row   7:          3  cif2dbg_c_debug_pd_en_0                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)
  Row   8:          4  cif2dbg_c_debug_pd_en_1                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        26         1    96.29%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
    1                                                module control_pd_debug_with_capture_v3 #(
    2                                                
    3                                                  parameter PD_WIDTH = 100, // Width of incoming PD
    4                                                  parameter PACKET_SIZE_OFFSET = 0, // Offset of the byte count field in the PD
    5                                                  parameter PACKET_SIZE_WIDTH = 12, // Width of the byte count field in the PD
    6                                                  parameter PD_MUX_SEL_WIDTH = $clog2(PD_WIDTH/32+ (PD_WIDTH % 32 == 0 ? 0 : 1)), // Width of the index for 32b words in the PD
    7                                                  parameter DISABLE_LACG = 0 // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    8                                                
    9                                                  )(
    10                                                 input 			                  clk,
    11                                                 input 			                  CFG_anchor_clk_override,
    12                                                 input 			                  rstn,
    13                                                 input 			                  e_valid, // Input PD valid
    14                                                 input [PD_WIDTH-1:0] 		      eq_pd, // Input PD data
    15                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray, // Matching masks and values
    16                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray,
    17                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray,
    18                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray,
    19                                                 input [3:0] 			            cif2dbg_c_debug_pd_en_reg, // Configurations
    20                                                 input 			                  capture_trigger, // Designer can use this bit to perform arbitrary captures to field1
    21                                                 input [PD_MUX_SEL_WIDTH:0] 	cif2dbg_c_debug_pd_captured_word_sel, // Word select for dbg2cif_c_debug_pd_out
    22                                                 output logic 			         dbg2cif_e_debug_pd_field1_cnt_inc, // Match on field1
    23                                                 output logic 			         dbg2cif_e_debug_pd_field2_cnt_inc, // Match on field2
    24                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_cnt_inc, // capture_trigger found
    25                                                 output logic 			         dbg2cif_e_debug_pd_total_pd_cnt_inc, // Total PDs
    26                                                 output logic 			         dbg2cif_e_debug_pd_field1_byte_cnt_inc, // Field1 byte counter
    27                                                 output logic 			         dbg2cif_e_debug_pd_field2_byte_cnt_inc, // Field2 byte counter
    28                                                 output logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    29                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field1, // Pulse indicating PD has been captured for field1
    30                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field2, // Pulse indicating PD has been captured for field2
    31                                                 output logic 			         capture_match_o, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    32                                                 output logic [32-1:0] 	      dbg2cif_c_debug_pd_out // Captured PD field
    33                                               );
    34                                                  
    35                                                  // LACG_MIN_WIDTH should be defined in a project common_defines.v file.
    36                                                  localparam USE_LACG = 0;
    37                                                  
    38                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field1; // pd captured by capture match on field1 or capture_trigger
    39                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field2; // pd captured by capture match on field2
    40                                                  logic                       pd_capture_event_field1;
    41                                                  logic                       pd_capture_event_field2;
    42                                                  logic                       pd_capture_field1;
    43                                                  logic                       pd_capture_field2;
    44                                                  logic 			             pd_capture_q_field1;
    45                                                  logic 			             pd_capture_q_field2;
    46                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field1;
    47                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field2;
    48                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field1_nxt;
    49                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field2_nxt;
    50                                                  
    51                                                  logic                       capture_match_field1;
    52                                                  logic                       capture_match_field2;
    53                                                  
    54                                                  logic                       cif2dbg_c_debug_pd_en_trigger_match; // enables capture trigger input and capture match output
    55                                                  logic 		      	       cif2dbg_c_debug_pd_capture_last_en; // capture regardless of whether a PD has already been captured - effectively capture last PD
    56                                                  logic                       cif2dbg_c_debug_pd_capture_en; // capture on valid
    57                                                  logic                       cif2dbg_c_debug_pd_en; // enable match counters and capture
    58                                                  
    59                                                  assign cif2dbg_c_debug_pd_en = cif2dbg_c_debug_pd_en_reg[0];
    60                                                  assign cif2dbg_c_debug_pd_capture_en = cif2dbg_c_debug_pd_en_reg[1];
    61                                                  assign cif2dbg_c_debug_pd_en_trigger_match = cif2dbg_c_debug_pd_en_reg[2]; 
    62                                                  assign cif2dbg_c_debug_pd_capture_last_en = cif2dbg_c_debug_pd_en_reg[3]; 
    63                                                  
    64              1                        346        assign capture_match_field1 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray));
    65              1                        346        assign capture_match_field2 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray));
    66                                                  
    67              1                        124        assign dbg2cif_e_debug_pd_field1_cnt_inc = e_valid && capture_match_field1 && cif2dbg_c_debug_pd_en;
    68              1                         98        assign dbg2cif_e_debug_pd_field2_cnt_inc = e_valid && capture_match_field2 && cif2dbg_c_debug_pd_en;
    69                                                  
    70              1                         96        assign dbg2cif_e_debug_pd_total_pd_cnt_inc = e_valid & cif2dbg_c_debug_pd_en;
    71                                                  assign dbg2cif_e_debug_pd_field1_byte_cnt_inc = dbg2cif_e_debug_pd_field1_cnt_inc;
    72                                                  assign dbg2cif_e_debug_pd_field2_byte_cnt_inc = dbg2cif_e_debug_pd_field2_cnt_inc;
    73              1                        159        assign dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount = eq_pd[PACKET_SIZE_OFFSET +: PACKET_SIZE_WIDTH];
    74                                                  
    75              1                        236        assign pd_capture_event_field1 = cif2dbg_c_debug_pd_capture_en && 
    76                                               				    (dbg2cif_e_debug_pd_field1_cnt_inc || (capture_trigger && e_valid && cif2dbg_c_debug_pd_en_trigger_match)) && 
    77                                               				    (!pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en);
    78              1                         63        assign pd_capture_event_field2 = cif2dbg_c_debug_pd_capture_en && 
    79                                               				    dbg2cif_e_debug_pd_field2_cnt_inc ;
    80                                                  
    81              1                        142        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82                                                                             pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    83                                               
    84              1                         65        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85                                                                             pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    86                                               
    87                                                  assign dbg2cif_e_debug_pd_capture_match_field1 = pd_capture_event_field1;
    88                                                  assign dbg2cif_e_debug_pd_capture_match_field2 = pd_capture_event_field2;
    89              1                        187        assign dbg2cif_e_debug_pd_capture_match_cnt_inc = e_valid && capture_trigger && cif2dbg_c_debug_pd_en_trigger_match && cif2dbg_c_debug_pd_en;
    90                                               
    91                                                  assign capture_match_o = pd_capture_event_field1;
    92                                               
    93              1                         58        always_ff @(posedge clk) begin
    94              1                          7           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         51           else       pd_capture_q_field1 <= pd_capture_field1;
    96                                                  end
    97                                               
    98              1                        234        always_comb begin
    99              1                        234           dbg2cif_c_debug_pd_in_field1_nxt = dbg2cif_c_debug_pd_in_field1;
    100                                                    if (pd_capture_event_field1) begin
    101             1                         84     	 dbg2cif_c_debug_pd_in_field1_nxt = eq_pd;
    102                                                    end
    103                                                 end
    104                                                 
    105                                                 generate
    106                                                    if (USE_LACG) begin
    107                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    108                                              	 ip_lacg_field1
    109                                              	   (.TEST__ENABLE(1'b0), 
    110                                              	    .data_in (dbg2cif_c_debug_pd_in_field1_nxt), 
    111                                              	    .anchor_clk_en (pd_capture_event_field1), 
    112                                              	    .data_out (dbg2cif_c_debug_pd_in_field1), .*);
    113                                                    end
    114                                                    else begin
    115             1                         92     	 always_ff @ (posedge clk) begin    
    116             1                         92     	    dbg2cif_c_debug_pd_in_field1 <= dbg2cif_c_debug_pd_in_field1_nxt;
    117                                              	 end
    118                                                    end
    119                                                 endgenerate
    120                                              
    121                                                 gen_multicycle_debug_data_mux 
    122                                                   #(/*AUTOINSTPARAM*/
    123                                                     // Parameters
    124                                                     .IN_DATA_BUS_WIDTH    (PD_WIDTH), // Templated
    125                                                     .NUM_OF_IN_DATA_BUSES (1), // Templated
    126                                                     .OUT_DATA_BUS_WIDTH   (32)) // Templated
    127                                                 gen_multicycle_captured_pd_field1 
    128                                                   (/*AUTOINST*/
    129                                                    // Outputs
    130                                                    .out_data_bus (dbg2cif_c_debug_pd_out_field1), // Templated
    131                                                    // Inputs
    132                                                    .clk          (clk),      // Templated
    133                                                    .in_data_bus  (dbg2cif_c_debug_pd_in_field1), // Templated
    134                                                    .in_data_sel  (cif2dbg_c_debug_pd_captured_word_sel[PD_MUX_SEL_WIDTH:1])
    135                                                    );
    136                                              
    137             1                         15        always_ff @(posedge clk) begin
    138             1                          6           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                          9           else       pd_capture_q_field2 <= pd_capture_field2;
    140                                                 end
    141                                              
    142             1                        163        always_comb begin
    143             1                        163           dbg2cif_c_debug_pd_in_field2_nxt = dbg2cif_c_debug_pd_in_field2;
    144                                                    if (pd_capture_event_field2) begin
    145             1                    ***0***     	 dbg2cif_c_debug_pd_in_field2_nxt = eq_pd;
    146                                                    end
    147                                                 end
    148                                                 
    149                                                 generate
    150                                                    if (USE_LACG) begin
    151                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    152                                              	 ip_lacg_field2
    153                                              	   (.TEST__ENABLE(1'b0), 
    154                                              	    .data_in (dbg2cif_c_debug_pd_in_field2_nxt), 
    155                                              	    .anchor_clk_en (pd_capture_event_field2), 
    156                                              	    .data_out (dbg2cif_c_debug_pd_in_field2), .*);
    157                                                    end
    158                                                    else begin
    159             1                          4     	 always_ff @ (posedge clk) begin    
    160             1                          4     	    dbg2cif_c_debug_pd_in_field2 <= dbg2cif_c_debug_pd_in_field2_nxt;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        284       203        81    71.47%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                           CFG_anchor_clk_override           0           0        0.00 
                              capture_match_field1           1           1      100.00 
                              capture_match_field2           0           0        0.00 
                                   capture_match_o           4           4      100.00 
                                   capture_trigger           4           4      100.00 
                     cif2dbg_c_debug_pd_capture_en           3           4      100.00 
                cif2dbg_c_debug_pd_capture_last_en           3           3      100.00 
         cif2dbg_c_debug_pd_captured_word_sel[0-3]           4           4      100.00 
                             cif2dbg_c_debug_pd_en           3           4      100.00 
                    cif2dbg_c_debug_pd_en_reg[0-1]           3           4      100.00 
                      cif2dbg_c_debug_pd_en_reg[2]           4           4      100.00 
                      cif2dbg_c_debug_pd_en_reg[3]           3           3      100.00 
               cif2dbg_c_debug_pd_en_trigger_match           4           4      100.00 
                                               clk           4           4      100.00 
                      dbg2cif_c_debug_pd_out[0-31]           4           4      100.00 
               dbg2cif_c_debug_pd_out_field1[0-31]           4           4      100.00 
               dbg2cif_c_debug_pd_out_field2[0-31]           0           0        0.00 
          dbg2cif_e_debug_pd_capture_match_cnt_inc           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field1           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field2           0           0        0.00 
            dbg2cif_e_debug_pd_field1_byte_cnt_inc           1           1      100.00 
                 dbg2cif_e_debug_pd_field1_cnt_inc           1           1      100.00 
            dbg2cif_e_debug_pd_field2_byte_cnt_inc           0           0        0.00 
                 dbg2cif_e_debug_pd_field2_cnt_inc           0           0        0.00 
               dbg2cif_e_debug_pd_total_pd_cnt_inc           3           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount[0-11] 
                                                             4           4      100.00 
                                           e_valid           3           4      100.00 
                           pd_capture_event_field1           4           4      100.00 
                           pd_capture_event_field2           0           0        0.00 
                                 pd_capture_field1           3           4      100.00 
                                 pd_capture_field2           0           0        0.00 
                               pd_capture_q_field1           3           4      100.00 
                               pd_capture_q_field2           0           0        0.00 
                                              rstn           0           3       50.00 

Total Node Count     =        142 
Toggled Node Count   =        101 
Untoggled Node Count =         41 

Toggle Coverage      =      71.47% (203 of 284 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field1
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                         70        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                         70     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        274        always @(posedge clk) begin
    69              1                        274           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        205     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        205     
    79       1 (GI=2)                        205     
    79       1 (GI=3)                        205     
    79       1 (GI=4)                        205     
    79       1 (GI=5)                        205     
    79       1 (GI=6)                        209     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                         95     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        142     
    83       1 (GI=3)                        189     
    83       1 (GI=4)                        223     
    83       1 (GI=5)                        260     
    83       1 (GI=6)                        301     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        368        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        368             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214       150        64    70.09%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           4           4      100.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-6]           4           4      100.00 
                                out_data_bus[0-31]           4           4      100.00 

Total Node Count     =        107 
Toggled Node Count   =         75 
Untoggled Node Count =         32 

Toggle Coverage      =      70.09% (150 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field2
=== Design Unit: work.gen_multicycle_debug_data_mux
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        19         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field2 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File gen_multicycle_debug_data_mux.sv
    10                                               module gen_multicycle_debug_data_mux (/*AUTOARG*/
    11                                                  // Outputs
    12                                                  out_data_bus,
    13                                                  // Inputs
    14                                                  clk, in_data_bus, in_data_sel
    15                                                  );    
    16                                               
    17                                                    
    18                                                  parameter IN_DATA_BUS_WIDTH = 100;
    19                                                  parameter NUM_OF_IN_DATA_BUSES = 3;   
    20                                                  parameter OUT_DATA_BUS_WIDTH = 32;
    21                                               
    22                                                  
    23                                                  localparam DATA_SEL_OPTIONS = NUM_OF_IN_DATA_BUSES*(IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH + (IN_DATA_BUS_WIDTH % OUT_DATA_BUS_WIDTH == 0 ? 0 : 1)); //Calc the number of out data busses assuming that each two in data buses are not set on the same out bus (thus needs padding).
    24                                                  localparam DATA_SEL_WIDTH = $clog2(DATA_SEL_OPTIONS); //The width of the required selector
    25                                                  localparam LAST_DATA_WIDTH = IN_DATA_BUS_WIDTH - (IN_DATA_BUS_WIDTH/OUT_DATA_BUS_WIDTH)*OUT_DATA_BUS_WIDTH;   
    26                                                  
    27                                                  //General
    28                                                  input clk;
    29                                                 
    30                                                  //Incoming data bus
    31                                                  input [NUM_OF_IN_DATA_BUSES*IN_DATA_BUS_WIDTH-1:0] in_data_bus;
    32                                                  input [DATA_SEL_WIDTH-1:0] 			      in_data_sel;
    33                                                  
    34                                                  //Outgoing data bus
    35                                                  output [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    36                                               
    37                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_next;
    38                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_spaced;
    39                                                  wire [DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-1:0]     in_data_bus_padded;
    40                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      out_data_bus;
    41                                                  
    42                                               
    43                                                  
    44                                                  reg [OUT_DATA_BUS_WIDTH-1:0] 		      gen_debug_muxed_data_to_multicycle;
    45                                                  reg [DATA_SEL_OPTIONS-1:0] 			      one_hot_select_vector_r;
    46                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_masked[DATA_SEL_OPTIONS-1:0];
    47                                                  wire [OUT_DATA_BUS_WIDTH-1:0] 		      muxed_data_after_or[DATA_SEL_OPTIONS-1:0];
    48                                                  
    49                                                  //Created to avoid Lints
    50              1                         34        assign in_data_bus_padded = {{(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH-IN_DATA_BUS_WIDTH*NUM_OF_IN_DATA_BUSES){1'b0}}, in_data_bus};   
    51                                               
    52                                                  genvar 					      i,j;
    53                                                  generate
    54                                                     for (i = 0; i < NUM_OF_IN_DATA_BUSES; i = i + 1) 
    55                                               	begin: gen1
    56                                               	   for (j = 0; j < DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES; j = j + 1) 
    57                                               	     begin: gen1
    58                                                   		if (LAST_DATA_WIDTH == 0) 
    59                                               	    	  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = in_data_bus_padded[(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES+j)*OUT_DATA_BUS_WIDTH+:OUT_DATA_BUS_WIDTH];	
    60                                               		else
    61     1 (GI=0,6)                         34     		  assign in_data_bus_spaced[OUT_DATA_BUS_WIDTH*(i*DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES + j)+:OUT_DATA_BUS_WIDTH] = (j == (DATA_SEL_OPTIONS/NUM_OF_IN_DATA_BUSES-1)) ?
    62                                               																    {{(OUT_DATA_BUS_WIDTH-LAST_DATA_WIDTH){1'b0}},in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:LAST_DATA_WIDTH]} :
    63                                               																    in_data_bus_padded[(i*IN_DATA_BUS_WIDTH+j*OUT_DATA_BUS_WIDTH)+:OUT_DATA_BUS_WIDTH];	     						
    64                                               	     end
    65                                               	end
    66                                                  endgenerate
    67                                               
    68              1                        274        always @(posedge clk) begin
    69              1                        274           one_hot_select_vector_r <=  1'b1 << in_data_sel;
    70                                                  end
    71                                               
    72                                               //   //Take the relevant data
    73                                               //   mux_of_bus #(.INPUT_WIDTH(DATA_SEL_OPTIONS*OUT_DATA_BUS_WIDTH), .OUTPUT_WIDTH(OUT_DATA_BUS_WIDTH), .SELECTOR_WIDTH(DATA_SEL_WIDTH))
    74                                               //        i_mux_of_bus 		(.data_in(in_data_bus_spaced), .index(in_data_sel), .data_out(muxed_data_next));
    75                                               
    76                                                  genvar k;
    77                                                  generate
    78                                                     for (k = 0; k < DATA_SEL_OPTIONS; k= k + 1) begin: gen2
    79       1 (GI=0)                        169     	 assign muxed_data_masked[k] = in_data_bus_spaced[k*OUT_DATA_BUS_WIDTH +: OUT_DATA_BUS_WIDTH] & ({OUT_DATA_BUS_WIDTH{one_hot_select_vector_r[k]}});
    79       1 (GI=1)                        169     
    79       1 (GI=2)                        169     
    79       1 (GI=3)                        169     
    79       1 (GI=4)                        169     
    79       1 (GI=5)                        169     
    79       1 (GI=6)                        173     
    80                                               	 if (k==0)
    81                                               	   assign muxed_data_after_or[0] = muxed_data_masked[0];
    82                                               	 else
    83       1 (GI=1)                         80     	   assign muxed_data_after_or[k] = muxed_data_after_or[k-1] | muxed_data_masked[k];
    83       1 (GI=2)                        120     
    83       1 (GI=3)                        160     
    83       1 (GI=4)                        183     
    83       1 (GI=5)                        205     
    83       1 (GI=6)                        235     
    84                                                     end
    85                                                  endgenerate
    86                                                  
    87                                               				 
    88              1                        251        always @(posedge clk) 
    89                                                    begin        
    90                                               //        gen_debug_muxed_data_to_multicycle           <=  muxed_data_next;	
    91              1                        251             gen_debug_muxed_data_to_multicycle           <=  muxed_data_after_or[DATA_SEL_OPTIONS-1];	

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        214       150        64    70.09%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_3/gen_multicycle_captured_pd_field2 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           4           4      100.00 
          gen_debug_muxed_data_to_multicycle[0-31]           2           2      100.00 
                                  in_data_sel[0-2]           4           4      100.00 
                             muxed_data_next[0-31]           0           0        0.00 
                      one_hot_select_vector_r[0-6]           4           4      100.00 
                                out_data_bus[0-31]           2           2      100.00 

Total Node Count     =        107 
Toggled Node Count   =         75 
Untoggled Node Count =         32 

Toggle Coverage      =      70.09% (150 of 214 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u/pd_debug_3
=== Design Unit: work.control_pd_debug_with_capture_v3
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16        16         0   100.00%

================================Branch Details================================

Branch Coverage for instance /TOP/pd_debug_u/pd_debug_3

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
------------------------------------IF Branch------------------------------------
    81                                       121     Count coming in to IF
    81              1                          7        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82              1                        114                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                       107     Count coming in to IF
    82              2                         52                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    82              3                         55                                   pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                        82     Count coming in to IF
    84              1                          6        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85              1                         76                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    85                                        71     Count coming in to IF
    85              2                         34                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    85              3                         37                                   pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    94                                        29     Count coming in to IF
    94              1                         11           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         18           else       pd_capture_q_field1 <= pd_capture_field1;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    100                                      271     Count coming in to IF
    100             1                        130           if (pd_capture_event_field1) begin
                                             141     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    138                                       25     Count coming in to IF
    138             1                          9           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                         16           else       pd_capture_q_field2 <= pd_capture_field2;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    144                                      233     Count coming in to IF
    144             1                         60           if (pd_capture_event_field2) begin
                                             173     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                     31        28         3    90.32%

================================Expression Details================================

Expression Coverage for instance /TOP/pd_debug_u/pd_debug_3 --

  File control_pd_debug_with_capture_v3.sv
----------------Focused Expression View-----------------
Line       64 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray)))
Expression totals: 2 of 2 input terms covered = 100.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         Y
  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))         Y

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:          4  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:          4  ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       65 Item    1  (e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray)))
Expression totals: 2 of 2 input terms covered = 100.00%

                                                                                                                                                           Input Term   Covered  Reason for no coverage   Hint
                                                                                                                                                          -----------  --------  -----------------------  --------------
                                                                                                                                                              e_valid         Y
  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))         Y

     Rows:       Hits  FEC Target                                                                                                                                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                                                                                                                                   -------------------------     
  Row   1:          4  e_valid_0                                                                                                                                                              -                             
  Row   2:          3  e_valid_1                                                                                                                                                              ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))
  Row   3:          4  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_0  e_valid                       
  Row   4:          3  ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray))_1  e_valid                       

----------------Focused Expression View-----------------
Line       67 Item    1  ((e_valid && capture_match_field1) && cif2dbg_c_debug_pd_en)
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
   capture_match_field1         Y
  cif2dbg_c_debug_pd_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:          4  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field1)
  Row   3:          4  capture_match_field1_0   e_valid                       
  Row   4:          4  capture_match_field1_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field1)
  Row   6:          4  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field1)

----------------Focused Expression View-----------------
Line       68 Item    1  ((e_valid && capture_match_field2) && cif2dbg_c_debug_pd_en)
Expression totals: 2 of 3 input terms covered = 66.66%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
   capture_match_field2         Y
  cif2dbg_c_debug_pd_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                -                             
  Row   2:          3  e_valid_1                (cif2dbg_c_debug_pd_en && capture_match_field2)
  Row   3:          4  capture_match_field2_0   e_valid                       
  Row   4:          3  capture_match_field2_1   (cif2dbg_c_debug_pd_en && e_valid)
  Row   5:    ***0***  cif2dbg_c_debug_pd_en_0  (e_valid && capture_match_field2)
  Row   6:          3  cif2dbg_c_debug_pd_en_1  (e_valid && capture_match_field2)

----------------Focused Expression View-----------------
Line       70 Item    1  (e_valid & cif2dbg_c_debug_pd_en)
Expression totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
                e_valid         Y
  cif2dbg_c_debug_pd_en         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          4  e_valid_0                cif2dbg_c_debug_pd_en         
  Row   2:          4  e_valid_1                cif2dbg_c_debug_pd_en         
  Row   3:          2  cif2dbg_c_debug_pd_en_0  e_valid                       
  Row   4:          4  cif2dbg_c_debug_pd_en_1  e_valid                       

----------------Focused Expression View-----------------
Line       75 Item    1  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && (~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en))
Expression totals: 7 of 7 input terms covered = 100.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
        cif2dbg_c_debug_pd_capture_en         Y
    dbg2cif_e_debug_pd_field1_cnt_inc         Y
                      capture_trigger         Y
                              e_valid         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                  pd_capture_q_field1         Y
   cif2dbg_c_debug_pd_capture_last_en         Y

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          2  cif2dbg_c_debug_pd_capture_en_0        -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1        ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
  Row   3:          4  dbg2cif_e_debug_pd_field1_cnt_inc_0    (cif2dbg_c_debug_pd_capture_en && ~((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))
  Row   4:          4  dbg2cif_e_debug_pd_field1_cnt_inc_1    ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en)
  Row   5:          4  capture_trigger_0                      (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc)
  Row   6:          4  capture_trigger_1                      ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   7:          4  e_valid_0                              (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && capture_trigger)
  Row   8:          4  e_valid_1                              ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   9:          3  cif2dbg_c_debug_pd_en_trigger_match_0  (cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   10:          4  cif2dbg_c_debug_pd_en_trigger_match_1  ((~pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en) && cif2dbg_c_debug_pd_capture_en && ~dbg2cif_e_debug_pd_field1_cnt_inc && (capture_trigger && e_valid))
 Row   11:          3  pd_capture_q_field1_0                  (cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match)))
 Row   12:          1  pd_capture_q_field1_1                  ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && ~cif2dbg_c_debug_pd_capture_last_en)
 Row   13:          1  cif2dbg_c_debug_pd_capture_last_en_0   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)
 Row   14:          2  cif2dbg_c_debug_pd_capture_last_en_1   ((cif2dbg_c_debug_pd_capture_en && (dbg2cif_e_debug_pd_field1_cnt_inc || ((capture_trigger && e_valid) && cif2dbg_c_debug_pd_en_trigger_match))) && pd_capture_q_field1)

----------------Focused Expression View-----------------
Line       78 Item    1  (cif2dbg_c_debug_pd_capture_en && dbg2cif_e_debug_pd_field2_cnt_inc)
Expression totals: 2 of 2 input terms covered = 100.00%

                         Input Term   Covered  Reason for no coverage   Hint
                        -----------  --------  -----------------------  --------------
      cif2dbg_c_debug_pd_capture_en         Y
  dbg2cif_e_debug_pd_field2_cnt_inc         Y

     Rows:       Hits  FEC Target                           Non-masking condition(s)      
 ---------  ---------  --------------------                 -------------------------     
  Row   1:          2  cif2dbg_c_debug_pd_capture_en_0      -                             
  Row   2:          3  cif2dbg_c_debug_pd_capture_en_1      dbg2cif_e_debug_pd_field2_cnt_inc
  Row   3:          4  dbg2cif_e_debug_pd_field2_cnt_inc_0  cif2dbg_c_debug_pd_capture_en 
  Row   4:          3  dbg2cif_e_debug_pd_field2_cnt_inc_1  cif2dbg_c_debug_pd_capture_en 

----------------Focused Expression View-----------------
Line       81 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field1? 1'b1: pd_capture_q_field1))
Expression totals: 3 of 3 input terms covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         Y
        pd_capture_event_field1         Y
            pd_capture_q_field1         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          2  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:          4  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field1? 1'b1: pd_capture_q_field1)
  Row   3:          3  pd_capture_event_field1_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field1)
  Row   4:          4  pd_capture_event_field1_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          3  pd_capture_q_field1_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)
  Row   6:          3  pd_capture_q_field1_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field1)

----------------Focused Expression View-----------------
Line       84 Item    1  (~cif2dbg_c_debug_pd_capture_en? 1'b0: (pd_capture_event_field2? 1'b1: pd_capture_q_field2))
Expression totals: 3 of 3 input terms covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  cif2dbg_c_debug_pd_capture_en         Y
        pd_capture_event_field2         Y
            pd_capture_q_field2         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          2  cif2dbg_c_debug_pd_capture_en_0  -                             
  Row   2:          3  cif2dbg_c_debug_pd_capture_en_1  (pd_capture_event_field2? 1'b1: pd_capture_q_field2)
  Row   3:          3  pd_capture_event_field2_0        (cif2dbg_c_debug_pd_capture_en && ~pd_capture_q_field2)
  Row   4:          3  pd_capture_event_field2_1        cif2dbg_c_debug_pd_capture_en 
  Row   5:          3  pd_capture_q_field2_0            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)
  Row   6:          2  pd_capture_q_field2_1            (cif2dbg_c_debug_pd_capture_en && ~pd_capture_event_field2)

----------------Focused Expression View-----------------
Line       89 Item    1  (((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match) && cif2dbg_c_debug_pd_en)
Expression totals: 3 of 4 input terms covered = 75.00%

                           Input Term   Covered  Reason for no coverage   Hint
                          -----------  --------  -----------------------  --------------
                              e_valid         Y
                      capture_trigger         Y
  cif2dbg_c_debug_pd_en_trigger_match         Y
                cif2dbg_c_debug_pd_en         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                             Non-masking condition(s)      
 ---------  ---------  --------------------                   -------------------------     
  Row   1:          4  e_valid_0                              -                             
  Row   2:          4  e_valid_1                              (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && capture_trigger)
  Row   3:          4  capture_trigger_0                      e_valid                       
  Row   4:          4  capture_trigger_1                      (cif2dbg_c_debug_pd_en && cif2dbg_c_debug_pd_en_trigger_match && e_valid)
  Row   5:          4  cif2dbg_c_debug_pd_en_trigger_match_0  (e_valid && capture_trigger)  
  Row   6:          4  cif2dbg_c_debug_pd_en_trigger_match_1  (cif2dbg_c_debug_pd_en && (e_valid && capture_trigger))
  Row   7:    ***0***  cif2dbg_c_debug_pd_en_0                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)
  Row   8:          4  cif2dbg_c_debug_pd_en_1                ((e_valid && capture_trigger) && cif2dbg_c_debug_pd_en_trigger_match)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u/pd_debug_3 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File control_pd_debug_with_capture_v3.sv
    1                                                module control_pd_debug_with_capture_v3 #(
    2                                                
    3                                                  parameter PD_WIDTH = 100, // Width of incoming PD
    4                                                  parameter PACKET_SIZE_OFFSET = 0, // Offset of the byte count field in the PD
    5                                                  parameter PACKET_SIZE_WIDTH = 12, // Width of the byte count field in the PD
    6                                                  parameter PD_MUX_SEL_WIDTH = $clog2(PD_WIDTH/32+ (PD_WIDTH % 32 == 0 ? 0 : 1)), // Width of the index for 32b words in the PD
    7                                                  parameter DISABLE_LACG = 0 // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    8                                                
    9                                                  )(
    10                                                 input 			                  clk,
    11                                                 input 			                  CFG_anchor_clk_override,
    12                                                 input 			                  rstn,
    13                                                 input 			                  e_valid, // Input PD valid
    14                                                 input [PD_WIDTH-1:0] 		      eq_pd, // Input PD data
    15                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray, // Matching masks and values
    16                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray,
    17                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray,
    18                                                 input [PD_WIDTH-1:0] 		      mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray,
    19                                                 input [3:0] 			            cif2dbg_c_debug_pd_en_reg, // Configurations
    20                                                 input 			                  capture_trigger, // Designer can use this bit to perform arbitrary captures to field1
    21                                                 input [PD_MUX_SEL_WIDTH:0] 	cif2dbg_c_debug_pd_captured_word_sel, // Word select for dbg2cif_c_debug_pd_out
    22                                                 output logic 			         dbg2cif_e_debug_pd_field1_cnt_inc, // Match on field1
    23                                                 output logic 			         dbg2cif_e_debug_pd_field2_cnt_inc, // Match on field2
    24                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_cnt_inc, // capture_trigger found
    25                                                 output logic 			         dbg2cif_e_debug_pd_total_pd_cnt_inc, // Total PDs
    26                                                 output logic 			         dbg2cif_e_debug_pd_field1_byte_cnt_inc, // Field1 byte counter
    27                                                 output logic 			         dbg2cif_e_debug_pd_field2_byte_cnt_inc, // Field2 byte counter
    28                                                 output logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    29                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field1, // Pulse indicating PD has been captured for field1
    30                                                 output logic 			         dbg2cif_e_debug_pd_capture_match_field2, // Pulse indicating PD has been captured for field2
    31                                                 output logic 			         capture_match_o, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    32                                                 output logic [32-1:0] 	      dbg2cif_c_debug_pd_out // Captured PD field
    33                                               );
    34                                                  
    35                                                  // LACG_MIN_WIDTH should be defined in a project common_defines.v file.
    36                                                  localparam USE_LACG = 0;
    37                                                  
    38                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field1; // pd captured by capture match on field1 or capture_trigger
    39                                                  logic [32-1:0] 		       dbg2cif_c_debug_pd_out_field2; // pd captured by capture match on field2
    40                                                  logic                       pd_capture_event_field1;
    41                                                  logic                       pd_capture_event_field2;
    42                                                  logic                       pd_capture_field1;
    43                                                  logic                       pd_capture_field2;
    44                                                  logic 			             pd_capture_q_field1;
    45                                                  logic 			             pd_capture_q_field2;
    46                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field1;
    47                                                  logic [PD_WIDTH-1:0] 	    dbg2cif_c_debug_pd_in_field2;
    48                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field1_nxt;
    49                                                  logic [PD_WIDTH-1:0]        dbg2cif_c_debug_pd_in_field2_nxt;
    50                                                  
    51                                                  logic                       capture_match_field1;
    52                                                  logic                       capture_match_field2;
    53                                                  
    54                                                  logic                       cif2dbg_c_debug_pd_en_trigger_match; // enables capture trigger input and capture match output
    55                                                  logic 		      	       cif2dbg_c_debug_pd_capture_last_en; // capture regardless of whether a PD has already been captured - effectively capture last PD
    56                                                  logic                       cif2dbg_c_debug_pd_capture_en; // capture on valid
    57                                                  logic                       cif2dbg_c_debug_pd_en; // enable match counters and capture
    58                                                  
    59                                                  assign cif2dbg_c_debug_pd_en = cif2dbg_c_debug_pd_en_reg[0];
    60                                                  assign cif2dbg_c_debug_pd_capture_en = cif2dbg_c_debug_pd_en_reg[1];
    61                                                  assign cif2dbg_c_debug_pd_en_trigger_match = cif2dbg_c_debug_pd_en_reg[2]; 
    62                                                  assign cif2dbg_c_debug_pd_capture_last_en = cif2dbg_c_debug_pd_en_reg[3]; 
    63                                                  
    64              1                        359        assign capture_match_field1 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray));
    65              1                        359        assign capture_match_field2 = e_valid && ((eq_pd & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray) == (mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray & mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray));
    66                                                  
    67              1                        121        assign dbg2cif_e_debug_pd_field1_cnt_inc = e_valid && capture_match_field1 && cif2dbg_c_debug_pd_en;
    68              1                        117        assign dbg2cif_e_debug_pd_field2_cnt_inc = e_valid && capture_match_field2 && cif2dbg_c_debug_pd_en;
    69                                                  
    70              1                         45        assign dbg2cif_e_debug_pd_total_pd_cnt_inc = e_valid & cif2dbg_c_debug_pd_en;
    71                                                  assign dbg2cif_e_debug_pd_field1_byte_cnt_inc = dbg2cif_e_debug_pd_field1_cnt_inc;
    72                                                  assign dbg2cif_e_debug_pd_field2_byte_cnt_inc = dbg2cif_e_debug_pd_field2_cnt_inc;
    73              1                        159        assign dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount = eq_pd[PACKET_SIZE_OFFSET +: PACKET_SIZE_WIDTH];
    74                                                  
    75              1                        248        assign pd_capture_event_field1 = cif2dbg_c_debug_pd_capture_en && 
    76                                               				    (dbg2cif_e_debug_pd_field1_cnt_inc || (capture_trigger && e_valid && cif2dbg_c_debug_pd_en_trigger_match)) && 
    77                                               				    (!pd_capture_q_field1 || cif2dbg_c_debug_pd_capture_last_en);
    78              1                         92        assign pd_capture_event_field2 = cif2dbg_c_debug_pd_capture_en && 
    79                                               				    dbg2cif_e_debug_pd_field2_cnt_inc ;
    80                                                  
    81              1                        125        assign pd_capture_field1 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    82                                                                             pd_capture_event_field1 ? 1'd1 :  pd_capture_q_field1 ; 
    83                                               
    84              1                         86        assign pd_capture_field2 = (cif2dbg_c_debug_pd_capture_en == 1'd0) ? 1'd0 :
    85                                                                             pd_capture_event_field2 ? 1'd1 :  pd_capture_q_field2 ; 
    86                                               
    87                                                  assign dbg2cif_e_debug_pd_capture_match_field1 = pd_capture_event_field1;
    88                                                  assign dbg2cif_e_debug_pd_capture_match_field2 = pd_capture_event_field2;
    89              1                        147        assign dbg2cif_e_debug_pd_capture_match_cnt_inc = e_valid && capture_trigger && cif2dbg_c_debug_pd_en_trigger_match && cif2dbg_c_debug_pd_en;
    90                                               
    91                                                  assign capture_match_o = pd_capture_event_field1;
    92                                               
    93              1                         29        always_ff @(posedge clk) begin
    94              1                         11           if (!rstn) pd_capture_q_field1 <= 1'b0;
    95              1                         18           else       pd_capture_q_field1 <= pd_capture_field1;
    96                                                  end
    97                                               
    98              1                        271        always_comb begin
    99              1                        271           dbg2cif_c_debug_pd_in_field1_nxt = dbg2cif_c_debug_pd_in_field1;
    100                                                    if (pd_capture_event_field1) begin
    101             1                        130     	 dbg2cif_c_debug_pd_in_field1_nxt = eq_pd;
    102                                                    end
    103                                                 end
    104                                                 
    105                                                 generate
    106                                                    if (USE_LACG) begin
    107                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    108                                              	 ip_lacg_field1
    109                                              	   (.TEST__ENABLE(1'b0), 
    110                                              	    .data_in (dbg2cif_c_debug_pd_in_field1_nxt), 
    111                                              	    .anchor_clk_en (pd_capture_event_field1), 
    112                                              	    .data_out (dbg2cif_c_debug_pd_in_field1), .*);
    113                                                    end
    114                                                    else begin
    115             1                        136     	 always_ff @ (posedge clk) begin    
    116             1                        136     	    dbg2cif_c_debug_pd_in_field1 <= dbg2cif_c_debug_pd_in_field1_nxt;
    117                                              	 end
    118                                                    end
    119                                                 endgenerate
    120                                              
    121                                                 gen_multicycle_debug_data_mux 
    122                                                   #(/*AUTOINSTPARAM*/
    123                                                     // Parameters
    124                                                     .IN_DATA_BUS_WIDTH    (PD_WIDTH), // Templated
    125                                                     .NUM_OF_IN_DATA_BUSES (1), // Templated
    126                                                     .OUT_DATA_BUS_WIDTH   (32)) // Templated
    127                                                 gen_multicycle_captured_pd_field1 
    128                                                   (/*AUTOINST*/
    129                                                    // Outputs
    130                                                    .out_data_bus (dbg2cif_c_debug_pd_out_field1), // Templated
    131                                                    // Inputs
    132                                                    .clk          (clk),      // Templated
    133                                                    .in_data_bus  (dbg2cif_c_debug_pd_in_field1), // Templated
    134                                                    .in_data_sel  (cif2dbg_c_debug_pd_captured_word_sel[PD_MUX_SEL_WIDTH:1])
    135                                                    );
    136                                              
    137             1                         25        always_ff @(posedge clk) begin
    138             1                          9           if (!rstn) pd_capture_q_field2 <= 1'b0;
    139             1                         16           else       pd_capture_q_field2 <= pd_capture_field2;
    140                                                 end
    141                                              
    142             1                        233        always_comb begin
    143             1                        233           dbg2cif_c_debug_pd_in_field2_nxt = dbg2cif_c_debug_pd_in_field2;
    144                                                    if (pd_capture_event_field2) begin
    145             1                         60     	 dbg2cif_c_debug_pd_in_field2_nxt = eq_pd;
    146                                                    end
    147                                                 end
    148                                                 
    149                                                 generate
    150                                                    if (USE_LACG) begin
    151                                              	 ip_lacg_rn #(.DWIDTH(PD_WIDTH))
    152                                              	 ip_lacg_field2
    153                                              	   (.TEST__ENABLE(1'b0), 
    154                                              	    .data_in (dbg2cif_c_debug_pd_in_field2_nxt), 
    155                                              	    .anchor_clk_en (pd_capture_event_field2), 
    156                                              	    .data_out (dbg2cif_c_debug_pd_in_field2), .*);
    157                                                    end
    158                                                    else begin
    159             1                         64     	 always_ff @ (posedge clk) begin    
    160             1                         64     	    dbg2cif_c_debug_pd_in_field2 <= dbg2cif_c_debug_pd_in_field2_nxt;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        284       281         3    98.94%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u/pd_debug_3 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                           CFG_anchor_clk_override           0           0        0.00 
                              capture_match_field1           4           4      100.00 
                              capture_match_field2           3           3      100.00 
                                   capture_match_o           4           4      100.00 
                                   capture_trigger           4           4      100.00 
                     cif2dbg_c_debug_pd_capture_en           2           2      100.00 
                cif2dbg_c_debug_pd_capture_last_en           2           3      100.00 
           cif2dbg_c_debug_pd_captured_word_sel[0]           4           3      100.00 
         cif2dbg_c_debug_pd_captured_word_sel[1-3]           4           4      100.00 
                             cif2dbg_c_debug_pd_en           2           3      100.00 
                      cif2dbg_c_debug_pd_en_reg[0]           2           3      100.00 
                      cif2dbg_c_debug_pd_en_reg[1]           2           2      100.00 
                      cif2dbg_c_debug_pd_en_reg[2]           3           4      100.00 
                      cif2dbg_c_debug_pd_en_reg[3]           2           3      100.00 
               cif2dbg_c_debug_pd_en_trigger_match           3           4      100.00 
                                               clk           4           4      100.00 
                      dbg2cif_c_debug_pd_out[0-31]           4           4      100.00 
               dbg2cif_c_debug_pd_out_field1[0-31]           4           4      100.00 
               dbg2cif_c_debug_pd_out_field2[0-31]           2           2      100.00 
          dbg2cif_e_debug_pd_capture_match_cnt_inc           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field1           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field2           2           2      100.00 
            dbg2cif_e_debug_pd_field1_byte_cnt_inc           4           4      100.00 
                 dbg2cif_e_debug_pd_field1_cnt_inc           4           4      100.00 
            dbg2cif_e_debug_pd_field2_byte_cnt_inc           3           3      100.00 
                 dbg2cif_e_debug_pd_field2_cnt_inc           3           3      100.00 
               dbg2cif_e_debug_pd_total_pd_cnt_inc           3           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount[0-11] 
                                                             4           4      100.00 
                                           e_valid           3           4      100.00 
                           pd_capture_event_field1           4           4      100.00 
                           pd_capture_event_field2           2           2      100.00 
                                 pd_capture_field1           2           3      100.00 
                                 pd_capture_field2           1           1      100.00 
                               pd_capture_q_field1           1           2      100.00 
                               pd_capture_q_field2           1           1      100.00 
                                              rstn           0           3       50.00 

Total Node Count     =        142 
Toggled Node Count   =        140 
Untoggled Node Count =          2 

Toggle Coverage      =      98.94% (281 of 284 bins)

=================================================================================
=== Instance: /TOP/pd_debug_u
=== Design Unit: work.pd_debug_wrapper
=================================================================================
Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      4         4         0   100.00%

================================Expression Details================================

Expression Coverage for instance /TOP/pd_debug_u --

  File pd_debug_wrapper.sv
----------------Focused Expression View-----------------
Line       186 Item    1  (eq_pd_after_pd_debug_1[113] || capture_match_o_2)
Expression totals: 2 of 2 input terms covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  eq_pd_after_pd_debug_1[113]         Y
            capture_match_o_2         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          4  eq_pd_after_pd_debug_1[113]_0  ~capture_match_o_2            
  Row   2:          4  eq_pd_after_pd_debug_1[113]_1  -                             
  Row   3:          4  capture_match_o_2_0            ~eq_pd_after_pd_debug_1[113]  
  Row   4:          1  capture_match_o_2_1            ~eq_pd_after_pd_debug_1[113]  

----------------Focused Expression View-----------------
Line       225 Item    1  (eq_pd_after_pd_debug_2[113] || capture_match_o_3)
Expression totals: 2 of 2 input terms covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  eq_pd_after_pd_debug_2[113]         Y
            capture_match_o_3         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          4  eq_pd_after_pd_debug_2[113]_0  ~capture_match_o_3            
  Row   2:          4  eq_pd_after_pd_debug_2[113]_1  -                             
  Row   3:          4  capture_match_o_3_0            ~eq_pd_after_pd_debug_2[113]  
  Row   4:          3  capture_match_o_3_1            ~eq_pd_after_pd_debug_2[113]  


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11        11         0   100.00%

================================Statement Details================================

Statement Coverage for instance /TOP/pd_debug_u --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File pd_debug_wrapper.sv
    1                                                module pd_debug_wrapper#(
    2                                                
    3                                                  parameter PD_WIDTH = 200, // Width of incoming PD
    4                                                  parameter PACKET_SIZE_OFFSET = 0, // Offset of the byte count field in the PD
    5                                                  parameter PACKET_SIZE_WIDTH = 12, // Width of the byte count field in the PD
    6                                                  parameter PD_MUX_SEL_WIDTH = $clog2(PD_WIDTH/32+ (PD_WIDTH % 32 == 0 ? 0 : 1)), // Width of the index for 32b words in the PD
    7                                                  parameter DISABLE_LACG = 0 // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    8                                                
    9                                                  )(
    10                                                 input 			       clk,
    11                                                 input 			       CFG_anchor_clk_override,
    12                                                 input 			       rstn,
    13                                                 input 			       e_valid, // Input PD valid
    14                                                 input [PD_WIDTH-1:0] 		       eq_pd, // Input PD data
    15                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_1, // Matching masks and values
    16                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_1,
    17                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_1,
    18                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_1,
    19                                               
    20                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_2, // Matching masks and values
    21                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_2,
    22                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_2,
    23                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_2,
    24                                               
    25                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_3, // Matching masks and values
    26                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_3,
    27                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_3,
    28                                                 input [PD_WIDTH-1:0] 		       mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_3,
    29                                                 input [3:0] 			       cif2dbg_c_debug_pd_en_reg_1, // Configurations
    30                                                 input [3:0] 			       cif2dbg_c_debug_pd_en_reg_2, // Configurations
    31                                                 input [3:0] 			       cif2dbg_c_debug_pd_en_reg_3, // Configurations
    32                                               
    33                                                 // input 			       capture_trigger, // Designer can use this bit to perform arbitrary captures to field1
    34                                                 input [PD_MUX_SEL_WIDTH:0] 	       cif2dbg_c_debug_pd_captured_word_sel_1, // Word select for dbg2cif_c_debug_pd_out
    35                                                 input [PD_MUX_SEL_WIDTH:0] 	       cif2dbg_c_debug_pd_captured_word_sel_2, // Word select for dbg2cif_c_debug_pd_out
    36                                                 input [PD_MUX_SEL_WIDTH:0] 	       cif2dbg_c_debug_pd_captured_word_sel_3, // Word select for dbg2cif_c_debug_pd_out
    37                                               
    38                                                 output logic 			       dbg2cif_e_debug_pd_field1_cnt_inc, // Match on field1
    39                                                 output logic 			       dbg2cif_e_debug_pd_field2_cnt_inc, // Match on field2
    40                                                 output logic 			       dbg2cif_e_debug_pd_capture_match_cnt_inc, // capture_trigger found
    41                                                 output logic 			       dbg2cif_e_debug_pd_total_pd_cnt_inc, // Total PDs
    42                                                 output logic 			       dbg2cif_e_debug_pd_field1_byte_cnt_inc, // Field1 byte counter
    43                                                 output logic 			       dbg2cif_e_debug_pd_field2_byte_cnt_inc, // Field2 byte counter
    44                                                 output logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    45                                                 output logic 			       dbg2cif_e_debug_pd_capture_match_field1, // Pulse indicating PD has been captured for field1
    46                                                 output logic 			       dbg2cif_e_debug_pd_capture_match_field2, // Pulse indicating PD has been captured for field2
    47                                                 output logic 			       capture_match_o, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    48                                                 output logic [32-1:0] 	       dbg2cif_c_debug_pd_out, // Captured PD field
    49                                                 output logic [PD_WIDTH-1:0] 		       eq_pd_out
    50                                               );
    51                                               
    52                                               
    53                                               
    54                                               logic dbg2cif_e_debug_pd_field1_cnt_inc_1;
    55                                               logic dbg2cif_e_debug_pd_field2_cnt_inc_1;
    56                                               logic dbg2cif_e_debug_pd_capture_match_cnt_inc_1;
    57                                               logic dbg2cif_e_debug_pd_total_pd_cnt_inc_1;
    58                                               logic dbg2cif_e_debug_pd_field1_byte_cnt_inc_1;
    59                                               logic dbg2cif_e_debug_pd_field2_byte_cnt_inc_1;
    60                                               logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_1;
    61                                               logic dbg2cif_e_debug_pd_capture_match_field1_1;
    62                                               logic dbg2cif_e_debug_pd_capture_match_field2_1;
    63                                               logic capture_match_o_1;
    64                                               logic [32-1:0] dbg2cif_c_debug_pd_out_1;
    65                                               
    66                                               
    67                                               
    68                                               logic e_valid_after_pd_debug_1;
    69                                               logic [PD_WIDTH-1:0] eq_pd_after_pd_debug_1;
    70                                               logic dbg2cif_e_debug_pd_field1_cnt_inc_2;
    71                                               logic dbg2cif_e_debug_pd_field2_cnt_inc_2;
    72                                               logic dbg2cif_e_debug_pd_capture_match_cnt_inc_2;
    73                                               logic dbg2cif_e_debug_pd_total_pd_cnt_inc_2;
    74                                               logic dbg2cif_e_debug_pd_field1_byte_cnt_inc_2;
    75                                               logic dbg2cif_e_debug_pd_field2_byte_cnt_inc_2;
    76                                               logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_2;
    77                                               logic dbg2cif_e_debug_pd_capture_match_field1_2;
    78                                               logic dbg2cif_e_debug_pd_capture_match_field2_2;
    79                                               logic capture_match_o_2;
    80                                               logic [32-1:0] dbg2cif_c_debug_pd_out_2;
    81                                               
    82                                               logic e_valid_after_pd_debug_2;
    83                                               logic [PD_WIDTH-1:0] eq_pd_after_pd_debug_2;
    84                                               logic dbg2cif_e_debug_pd_field1_cnt_inc_3;
    85                                               logic dbg2cif_e_debug_pd_field2_cnt_inc_3;
    86                                               logic dbg2cif_e_debug_pd_capture_match_cnt_inc_3;
    87                                               logic dbg2cif_e_debug_pd_total_pd_cnt_inc_3;
    88                                               logic dbg2cif_e_debug_pd_field1_byte_cnt_inc_3;
    89                                               logic dbg2cif_e_debug_pd_field2_byte_cnt_inc_3;
    90                                               logic [PACKET_SIZE_WIDTH-1:0] dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_3;
    91                                               logic dbg2cif_e_debug_pd_capture_match_field1_3;
    92                                               logic dbg2cif_e_debug_pd_capture_match_field2_3;
    93                                               logic capture_match_o_3;
    94                                               logic [32-1:0] dbg2cif_c_debug_pd_out_3;
    95                                               
    96                                               
    97                                               logic e_valid_after_pd_debug_3;
    98                                               logic [PD_WIDTH-1:0] eq_pd_after_pd_debug_3;
    99                                               
    100                                              assign dbg2cif_e_debug_pd_field1_cnt_inc = dbg2cif_e_debug_pd_field1_cnt_inc_3;
    101                                              assign dbg2cif_e_debug_pd_field2_cnt_inc = dbg2cif_e_debug_pd_field2_cnt_inc_3;
    102                                              assign dbg2cif_e_debug_pd_capture_match_cnt_inc = dbg2cif_e_debug_pd_capture_match_cnt_inc_3;
    103                                              assign dbg2cif_e_debug_pd_total_pd_cnt_inc = dbg2cif_e_debug_pd_total_pd_cnt_inc_3;
    104                                              assign dbg2cif_e_debug_pd_field1_byte_cnt_inc = dbg2cif_e_debug_pd_field1_byte_cnt_inc_3;
    105                                              assign dbg2cif_e_debug_pd_field2_byte_cnt_inc = dbg2cif_e_debug_pd_field2_byte_cnt_inc_3;
    106                                              assign dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount = dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_3;
    107                                              assign dbg2cif_e_debug_pd_capture_match_field1 = dbg2cif_e_debug_pd_capture_match_field1_3;
    108                                              assign dbg2cif_e_debug_pd_capture_match_field2 = dbg2cif_e_debug_pd_capture_match_field2_3;
    109                                              assign capture_match_o = capture_match_o_3;
    110                                              assign dbg2cif_c_debug_pd_out = dbg2cif_c_debug_pd_out_3;
    111                                              assign eq_pd_out = eq_pd_after_pd_debug_3;
    112                                              
    113                                              control_pd_debug_with_capture_v3 #(
    114                                              
    115                                                .PD_WIDTH(PD_WIDTH), // Width of incoming PD
    116                                                .PACKET_SIZE_OFFSET(PACKET_SIZE_OFFSET), // Offset of the byte count field in the PD
    117                                                .PACKET_SIZE_WIDTH(PACKET_SIZE_WIDTH), // Width of the byte count field in the PD
    118                                                .PD_MUX_SEL_WIDTH(PD_MUX_SEL_WIDTH), // Width of the index for 32b words in the PD
    119                                                .DISABLE_LACG(DISABLE_LACG) // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    120                                              
    121                                                )pd_debug_1 ( 			       clk,
    122                                                 			       CFG_anchor_clk_override,
    123                                                 			       rstn,
    124                                                 			       e_valid, //  PD valid
    125                                              				   eq_pd, //  PD data
    126                                              				   mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_1, // Matching masks and values
    127                                              				   mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_1,
    128                                              				   mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_1,
    129                                              				   mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_1,
    130                                              				   cif2dbg_c_debug_pd_en_reg_1, // Configurations
    131                                              				   			       eq_pd[113], // Designer can use this bit to perform arbitrary captures to field1
    132                                              				  cif2dbg_c_debug_pd_captured_word_sel_1, // Word select for dbg2cif_c_debug_pd_out
    133                                              				  dbg2cif_e_debug_pd_field1_cnt_inc_1, // Match on field1
    134                                              				  dbg2cif_e_debug_pd_field2_cnt_inc_1, // Match on field2
    135                                              				  dbg2cif_e_debug_pd_capture_match_cnt_inc_1, // capture_trigger found
    136                                              				  dbg2cif_e_debug_pd_total_pd_cnt_inc_1, // Total PDs
    137                                              				  dbg2cif_e_debug_pd_field1_byte_cnt_inc_1, // Field1 byte counter
    138                                              				  dbg2cif_e_debug_pd_field2_byte_cnt_inc_1, // Field2 byte counter
    139                                              				  dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_1, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    140                                              				  dbg2cif_e_debug_pd_capture_match_field1_1, // Pulse indicating PD has been captured for field1
    141                                              				  dbg2cif_e_debug_pd_capture_match_field2_1, // Pulse indicating PD has been captured for field2
    142                                              				  capture_match_o_1, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    143                                              				  dbg2cif_c_debug_pd_out_1); // Captured PD field)
    144                                              
    145                                              
    146             1                        314     always @(posedge clk) begin
    147             1                        314     	eq_pd_after_pd_debug_1<=eq_pd;
    148             1                        314     	e_valid_after_pd_debug_1<=e_valid;
    149                                              end
    150                                              
    151                                              control_pd_debug_with_capture_v3 #(
    152                                              
    153                                                .PD_WIDTH(PD_WIDTH), // Width of incoming PD
    154                                                .PACKET_SIZE_OFFSET(PACKET_SIZE_OFFSET), // Offset of the byte count field in the PD
    155                                                .PACKET_SIZE_WIDTH(PACKET_SIZE_WIDTH), // Width of the byte count field in the PD
    156                                                .PD_MUX_SEL_WIDTH(PD_MUX_SEL_WIDTH), // Width of the index for 32b words in the PD
    157                                                .DISABLE_LACG(DISABLE_LACG) // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    158                                              
    159                                                ) pd_debug_2 ( 			       clk,
    160                                                 			       CFG_anchor_clk_override,
    161                                                 			       rstn,
    162                                                 			       e_valid_after_pd_debug_1, //  PD valid
    163                                              				   eq_pd_after_pd_debug_1, //  PD data
    164                                              				   mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_2, // Matching masks and values
    165                                              				   mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_2,
    166                                              				   mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_2,
    167                                              				   mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_2,
    168                                              				   cif2dbg_c_debug_pd_en_reg_2, // Configurations
    169                                              				   			       eq_pd_after_pd_debug_1[113], // Designer can use this bit to perform arbitrary captures to field1
    170                                              				  cif2dbg_c_debug_pd_captured_word_sel_2, // Word select for dbg2cif_c_debug_pd_out
    171                                              				  dbg2cif_e_debug_pd_field1_cnt_inc_2, // Match on field1
    172                                              				  dbg2cif_e_debug_pd_field2_cnt_inc_2, // Match on field2
    173                                              				  dbg2cif_e_debug_pd_capture_match_cnt_inc_2, // capture_trigger found
    174                                              				  dbg2cif_e_debug_pd_total_pd_cnt_inc_2, // Total PDs
    175                                              				  dbg2cif_e_debug_pd_field1_byte_cnt_inc_2, // Field1 byte counter
    176                                              				  dbg2cif_e_debug_pd_field2_byte_cnt_inc_2, // Field2 byte counter
    177                                              				  dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_2, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    178                                              				  dbg2cif_e_debug_pd_capture_match_field1_2, // Pulse indicating PD has been captured for field1
    179                                              				  dbg2cif_e_debug_pd_capture_match_field2_2, // Pulse indicating PD has been captured for field2
    180                                              				  capture_match_o_2, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    181                                              				  dbg2cif_c_debug_pd_out_2); // Captured PD field)
    182                                              
    183                                              
    184             1                        364     always @(posedge clk) begin
    185             1                        364     	eq_pd_after_pd_debug_2<=eq_pd_after_pd_debug_1;
    186             1                        364     	eq_pd_after_pd_debug_2[113]<=eq_pd_after_pd_debug_1[113] || capture_match_o_2;
    187             1                        364     	e_valid_after_pd_debug_2<=e_valid_after_pd_debug_1;
    188                                              end
    189                                              
    190                                              control_pd_debug_with_capture_v3 #(
    191                                              
    192                                                .PD_WIDTH(PD_WIDTH), // Width of incoming PD
    193                                                .PACKET_SIZE_OFFSET(PACKET_SIZE_OFFSET), // Offset of the byte count field in the PD
    194                                                .PACKET_SIZE_WIDTH(PACKET_SIZE_WIDTH), // Width of the byte count field in the PD
    195                                                .PD_MUX_SEL_WIDTH(PD_MUX_SEL_WIDTH), // Width of the index for 32b words in the PD
    196                                                .DISABLE_LACG(DISABLE_LACG) // Set to manually disable the usage of LACG. The module will automatically disable LACG for PD_WIDTH < `LACG_MIN_WIDTH.
    197                                              
    198                                                )pd_debug_3 ( 			       clk,
    199                                                 			       CFG_anchor_clk_override,
    200                                                 			       rstn,
    201                                                 			       e_valid_after_pd_debug_2, //  PD valid
    202                                              				   eq_pd_after_pd_debug_2, //  PD data
    203                                              				   mem2dbg_c_debug_pd_field1_value_cfg_mem_regarray_3, // Matching masks and values
    204                                              				   mem2dbg_c_debug_pd_field1_mask_cfg_mem_regarray_3,
    205                                              				   mem2dbg_c_debug_pd_field2_value_cfg_mem_regarray_3,
    206                                              				   mem2dbg_c_debug_pd_field2_mask_cfg_mem_regarray_3,
    207                                              				   cif2dbg_c_debug_pd_en_reg_3, // Configurations
    208                                              				   			       eq_pd_after_pd_debug_2[113], // Designer can use this bit to perform arbitrary captures to field1
    209                                              				  cif2dbg_c_debug_pd_captured_word_sel_3, // Word select for dbg2cif_c_debug_pd_out
    210                                              				  dbg2cif_e_debug_pd_field1_cnt_inc_3, // Match on field1
    211                                              				  dbg2cif_e_debug_pd_field2_cnt_inc_3, // Match on field2
    212                                              				  dbg2cif_e_debug_pd_capture_match_cnt_inc_3, // capture_trigger found
    213                                              				  dbg2cif_e_debug_pd_total_pd_cnt_inc_3, // Total PDs
    214                                              				  dbg2cif_e_debug_pd_field1_byte_cnt_inc_3, // Field1 byte counter
    215                                              				  dbg2cif_e_debug_pd_field2_byte_cnt_inc_3, // Field2 byte counter
    216                                              				  dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_3, // Byte count field from PD as designated by PACKET_SIZE_WIDTH and PACKET_SIZE_OFFSET
    217                                              				  dbg2cif_e_debug_pd_capture_match_field1_3, // Pulse indicating PD has been captured for field1
    218                                              				  dbg2cif_e_debug_pd_capture_match_field2_3, // Pulse indicating PD has been captured for field2
    219                                              				  capture_match_o_3, // Pulse indicating PD has been captured for field1. This is available for the designer to use in their pipeline.
    220                                              				  dbg2cif_c_debug_pd_out_3); // Captured PD field)
    221                                              
    222                                              
    223             1                        395     always @(posedge clk) begin
    224             1                        395     	eq_pd_after_pd_debug_3<=eq_pd_after_pd_debug_2;
    225             1                        395     	eq_pd_after_pd_debug_3[113]<=eq_pd_after_pd_debug_2[113] || capture_match_o_3;
    226             1                        395     	e_valid_after_pd_debug_3<=e_valid_after_pd_debug_2;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        660       473       187    71.66%

================================Toggle Details================================

Toggle Coverage for instance /TOP/pd_debug_u --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                           CFG_anchor_clk_override           0           0        0.00 
                                   capture_match_o           4           4      100.00 
                                 capture_match_o_1           3           3      100.00 
                                 capture_match_o_2           4           4      100.00 
                                 capture_match_o_3           4           4      100.00 
       cif2dbg_c_debug_pd_captured_word_sel_1[0-3]           4           4      100.00 
       cif2dbg_c_debug_pd_captured_word_sel_2[0-3]           4           4      100.00 
         cif2dbg_c_debug_pd_captured_word_sel_3[0]           4           3      100.00 
       cif2dbg_c_debug_pd_captured_word_sel_3[1-3]           4           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_1[0]           3           3      100.00 
                    cif2dbg_c_debug_pd_en_reg_1[1]           3           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_1[2]           4           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_1[3]           3           3      100.00 
                  cif2dbg_c_debug_pd_en_reg_2[0-1]           3           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_2[2]           4           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_2[3]           3           3      100.00 
                    cif2dbg_c_debug_pd_en_reg_3[0]           2           3      100.00 
                    cif2dbg_c_debug_pd_en_reg_3[1]           2           2      100.00 
                    cif2dbg_c_debug_pd_en_reg_3[2]           3           4      100.00 
                    cif2dbg_c_debug_pd_en_reg_3[3]           2           3      100.00 
                                               clk           4           4      100.00 
                      dbg2cif_c_debug_pd_out[0-31]           4           4      100.00 
                    dbg2cif_c_debug_pd_out_1[0-31]           3           3      100.00 
                    dbg2cif_c_debug_pd_out_2[0-31]           4           4      100.00 
                    dbg2cif_c_debug_pd_out_3[0-31]           4           4      100.00 
          dbg2cif_e_debug_pd_capture_match_cnt_inc           4           4      100.00 
        dbg2cif_e_debug_pd_capture_match_cnt_inc_1           4           4      100.00 
        dbg2cif_e_debug_pd_capture_match_cnt_inc_2           4           4      100.00 
        dbg2cif_e_debug_pd_capture_match_cnt_inc_3           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field1           4           4      100.00 
         dbg2cif_e_debug_pd_capture_match_field1_1           3           3      100.00 
         dbg2cif_e_debug_pd_capture_match_field1_2           4           4      100.00 
         dbg2cif_e_debug_pd_capture_match_field1_3           4           4      100.00 
           dbg2cif_e_debug_pd_capture_match_field2           2           2      100.00 
         dbg2cif_e_debug_pd_capture_match_field2_1           0           0        0.00 
         dbg2cif_e_debug_pd_capture_match_field2_2           0           0        0.00 
         dbg2cif_e_debug_pd_capture_match_field2_3           2           2      100.00 
            dbg2cif_e_debug_pd_field1_byte_cnt_inc           4           4      100.00 
          dbg2cif_e_debug_pd_field1_byte_cnt_inc_1           1           1      100.00 
          dbg2cif_e_debug_pd_field1_byte_cnt_inc_2           1           1      100.00 
          dbg2cif_e_debug_pd_field1_byte_cnt_inc_3           4           4      100.00 
                 dbg2cif_e_debug_pd_field1_cnt_inc           4           4      100.00 
               dbg2cif_e_debug_pd_field1_cnt_inc_1           1           1      100.00 
               dbg2cif_e_debug_pd_field1_cnt_inc_2           1           1      100.00 
               dbg2cif_e_debug_pd_field1_cnt_inc_3           4           4      100.00 
            dbg2cif_e_debug_pd_field2_byte_cnt_inc           3           3      100.00 
          dbg2cif_e_debug_pd_field2_byte_cnt_inc_1           0           0        0.00 
          dbg2cif_e_debug_pd_field2_byte_cnt_inc_2           0           0        0.00 
          dbg2cif_e_debug_pd_field2_byte_cnt_inc_3           3           3      100.00 
                 dbg2cif_e_debug_pd_field2_cnt_inc           3           3      100.00 
               dbg2cif_e_debug_pd_field2_cnt_inc_1           0           0        0.00 
               dbg2cif_e_debug_pd_field2_cnt_inc_2           0           0        0.00 
               dbg2cif_e_debug_pd_field2_cnt_inc_3           3           3      100.00 
               dbg2cif_e_debug_pd_total_pd_cnt_inc           3           4      100.00 
             dbg2cif_e_debug_pd_total_pd_cnt_inc_1           3           4      100.00 
             dbg2cif_e_debug_pd_total_pd_cnt_inc_2           3           4      100.00 
             dbg2cif_e_debug_pd_total_pd_cnt_inc_3           3           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount[0-11] 
                                                             4           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_1[0-11] 
                                                             4           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_2[0-11] 
                                                             4           4      100.00 
dbg2cif_eq_debug_pd_field_byte_cnt_inc_amount_3[0-11] 
                                                             4           4      100.00 
                                           e_valid           3           4      100.00 
                          e_valid_after_pd_debug_1           3           4      100.00 
                          e_valid_after_pd_debug_2           3           4      100.00 
                          e_valid_after_pd_debug_3           3           4      100.00 
                                        eq_pd[113]           4           4      100.00 
                                    eq_pd[114-199]           0           0        0.00 
                                              rstn           0           3       50.00 

Total Node Count     =        330 
Toggled Node Count   =        236 
Untoggled Node Count =         94 

Toggle Coverage      =      71.66% (473 of 660 bins)

=================================================================================
=== Instance: /pd_debug_pkg
=== Design Unit: work.pd_debug_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         20        na        na        na
            Covergroup Bins         71        71         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /pd_debug_pkg/pd_debug_coverage/pd_debug_cvg    100.00%        100          -    Covered              
    covered/total bins:                                    71         71          -                      
    missing/total bins:                                     0         71          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reset_cv                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        14          1          -    Covered              
        bin auto[1]                                       142          1          -    Covered              
    Coverpoint count_en                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        14          1          -    Covered              
        bin auto[1]                                       128          1          -    Covered              
    Coverpoint match_field1                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        99          1          -    Covered              
        bin auto[1]                                        43          1          -    Covered              
    Coverpoint match_field2                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        98          1          -    Covered              
        bin auto[1]                                        44          1          -    Covered              
    Coverpoint capture_last_en                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        42          1          -    Covered              
        bin auto[1]                                       100          1          -    Covered              
    Coverpoint capture_first_en                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       121          1          -    Covered              
        bin auto[1]                                        21          1          -    Covered              
    Coverpoint capture_trigger_en                     100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       115          1          -    Covered              
        bin auto[1]                                        27          1          -    Covered              
    Coverpoint cascade1                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       115          1          -    Covered              
        bin auto[1]                                        27          1          -    Covered              
    Coverpoint cascade2                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       116          1          -    Covered              
        bin auto[1]                                        26          1          -    Covered              
    Coverpoint match_instance1                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       139          1          -    Covered              
        bin auto[1]                                         3          1          -    Covered              
    Coverpoint match_instance2                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       129          1          -    Covered              
        bin auto[1]                                        13          1          -    Covered              
    Cross count_field1                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          37          1          -    Covered              
            bin <auto[0],auto[1]>                           6          1          -    Covered              
            bin <auto[1],auto[0]>                          91          1          -    Covered              
            bin <auto[0],auto[0]>                           8          1          -    Covered              
    Cross count_field2                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          37          1          -    Covered              
            bin <auto[0],auto[1]>                           7          1          -    Covered              
            bin <auto[1],auto[0]>                          91          1          -    Covered              
            bin <auto[0],auto[0]>                           7          1          -    Covered              
    Cross capture_field1_last                         100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  23          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  73          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  14          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  18          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   7          1          -    Covered              
    Cross capture_field1_first                        100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  23          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  73          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  14          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  18          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   7          1          -    Covered              
    Cross capture_trigger                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          27          1          -    Covered              
            bin <auto[0],auto[1]>                         101          1          -    Covered              
            bin <auto[0],auto[0]>                          14          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 
    Cross capture_field2_last                         100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  76          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  17          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   4          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   6          1          -    Covered              
    Cross capture_field2_first                        100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  76          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  17          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   4          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   6          1          -    Covered              
    Cross cascade_from_instance1                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                           3          1          -    Covered              
            bin <auto[1],auto[0]>                          24          1          -    Covered              
            bin <auto[0],auto[0]>                         115          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 
    Cross cascade_from_instance2                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          13          1          -    Covered              
            bin <auto[1],auto[0]>                          13          1          -    Covered              
            bin <auto[0],auto[0]>                         116          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 

COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /pd_debug_pkg/pd_debug_coverage/pd_debug_cvg    100.00%        100          -    Covered              
    covered/total bins:                                    71         71          -                      
    missing/total bins:                                     0         71          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint reset_cv                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        14          1          -    Covered              
        bin auto[1]                                       142          1          -    Covered              
    Coverpoint count_en                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        14          1          -    Covered              
        bin auto[1]                                       128          1          -    Covered              
    Coverpoint match_field1                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        99          1          -    Covered              
        bin auto[1]                                        43          1          -    Covered              
    Coverpoint match_field2                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        98          1          -    Covered              
        bin auto[1]                                        44          1          -    Covered              
    Coverpoint capture_last_en                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                        42          1          -    Covered              
        bin auto[1]                                       100          1          -    Covered              
    Coverpoint capture_first_en                       100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       121          1          -    Covered              
        bin auto[1]                                        21          1          -    Covered              
    Coverpoint capture_trigger_en                     100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       115          1          -    Covered              
        bin auto[1]                                        27          1          -    Covered              
    Coverpoint cascade1                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       115          1          -    Covered              
        bin auto[1]                                        27          1          -    Covered              
    Coverpoint cascade2                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       116          1          -    Covered              
        bin auto[1]                                        26          1          -    Covered              
    Coverpoint match_instance1                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       139          1          -    Covered              
        bin auto[1]                                         3          1          -    Covered              
    Coverpoint match_instance2                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                       129          1          -    Covered              
        bin auto[1]                                        13          1          -    Covered              
    Cross count_field1                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          37          1          -    Covered              
            bin <auto[0],auto[1]>                           6          1          -    Covered              
            bin <auto[1],auto[0]>                          91          1          -    Covered              
            bin <auto[0],auto[0]>                           8          1          -    Covered              
    Cross count_field2                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          37          1          -    Covered              
            bin <auto[0],auto[1]>                           7          1          -    Covered              
            bin <auto[1],auto[0]>                          91          1          -    Covered              
            bin <auto[0],auto[0]>                           7          1          -    Covered              
    Cross capture_field1_last                         100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  23          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  73          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  14          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  18          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   7          1          -    Covered              
    Cross capture_field1_first                        100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  23          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  73          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  14          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  18          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   7          1          -    Covered              
    Cross capture_trigger                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          27          1          -    Covered              
            bin <auto[0],auto[1]>                         101          1          -    Covered              
            bin <auto[0],auto[0]>                          14          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 
    Cross capture_field2_last                         100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  76          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  17          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   4          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   6          1          -    Covered              
    Cross capture_field2_first                        100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>                  20          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>                   3          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>                  76          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>                   1          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>                  17          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>                   4          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>                  15          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>                   6          1          -    Covered              
    Cross cascade_from_instance1                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                           3          1          -    Covered              
            bin <auto[1],auto[0]>                          24          1          -    Covered              
            bin <auto[0],auto[0]>                         115          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 
    Cross cascade_from_instance2                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          13          1          -    Covered              
            bin <auto[1],auto[0]>                          13          1          -    Covered              
            bin <auto[0],auto[0]>                         116          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin invalid_combinations                 0                     -    ZERO                 

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

Total Coverage By Instance (filtered view): 84.87%

